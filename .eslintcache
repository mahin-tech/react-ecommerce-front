[{"D:\\projects\\ecommerce\\client\\src\\index.js":"1","D:\\projects\\ecommerce\\client\\src\\App.js":"2","D:\\projects\\ecommerce\\client\\src\\pages\\Home.js":"3","D:\\projects\\ecommerce\\client\\src\\pages\\auth\\Register.js":"4","D:\\projects\\ecommerce\\client\\src\\pages\\auth\\Login.js":"5","D:\\projects\\ecommerce\\client\\src\\components\\nav\\Header.js":"6","D:\\projects\\ecommerce\\client\\src\\firebase.js":"7","D:\\projects\\ecommerce\\client\\src\\reducers\\index.js":"8","D:\\projects\\ecommerce\\client\\src\\pages\\auth\\RegisterComplete.js":"9","D:\\projects\\ecommerce\\client\\src\\reducers\\userReducer.js":"10","D:\\projects\\ecommerce\\client\\src\\pages\\auth\\ForgotPassword.js":"11","D:\\projects\\ecommerce\\client\\src\\pages\\user\\Wishlist.js":"12","D:\\projects\\ecommerce\\client\\src\\functions\\auth.js":"13","D:\\projects\\ecommerce\\client\\src\\pages\\user\\Password.js":"14","D:\\projects\\ecommerce\\client\\src\\pages\\admin\\AdminDashboard.js":"15","D:\\projects\\ecommerce\\client\\src\\pages\\user\\History.js":"16","D:\\projects\\ecommerce\\client\\src\\components\\routes\\UserRoute.js":"17","D:\\projects\\ecommerce\\client\\src\\components\\routes\\AdminRoute.js":"18","D:\\projects\\ecommerce\\client\\src\\components\\nav\\UserNav.js":"19","D:\\projects\\ecommerce\\client\\src\\components\\routes\\LoadingToRedirect.js":"20","D:\\projects\\ecommerce\\client\\src\\pages\\admin\\category\\CategoryCreate.js":"21","D:\\projects\\ecommerce\\client\\src\\pages\\admin\\category\\CategoryUpdate.js":"22","D:\\projects\\ecommerce\\client\\src\\pages\\admin\\sub\\SubCreate.js":"23","D:\\projects\\ecommerce\\client\\src\\pages\\admin\\sub\\SubUpdate.js":"24","D:\\projects\\ecommerce\\client\\src\\pages\\admin\\product\\ProductCreate.js":"25","D:\\projects\\ecommerce\\client\\src\\pages\\admin\\product\\AllProducts.js":"26","D:\\projects\\ecommerce\\client\\src\\functions\\category.js":"27","D:\\projects\\ecommerce\\client\\src\\functions\\sub.js":"28","D:\\projects\\ecommerce\\client\\src\\components\\nav\\AdminNav.js":"29","D:\\projects\\ecommerce\\client\\src\\functions\\product.js":"30","D:\\projects\\ecommerce\\client\\src\\components\\forms\\CategoryForm.js":"31","D:\\projects\\ecommerce\\client\\src\\components\\forms\\LocalSearch.js":"32","D:\\projects\\ecommerce\\client\\src\\components\\forms\\ProductcreateForm.js":"33","D:\\projects\\ecommerce\\client\\src\\components\\forms\\FileUpload.js":"34","D:\\projects\\ecommerce\\client\\src\\components\\cards\\AdminProductCard.js":"35","D:\\projects\\ecommerce\\client\\src\\pages\\admin\\product\\ProductUpdate.js":"36","D:\\projects\\ecommerce\\client\\src\\components\\forms\\ProductCreateForm.js":"37","D:\\projects\\ecommerce\\client\\src\\components\\forms\\ProductUpdateForm.js":"38","D:\\projects\\ecommerce\\client\\src\\pages\\Product.js":"39","D:\\projects\\ecommerce\\client\\src\\components\\cards\\ProductCard.js":"40","D:\\projects\\ecommerce\\client\\src\\components\\home\\BestSellers.js":"41","D:\\projects\\ecommerce\\client\\src\\components\\cards\\Jumbotron.js":"42","D:\\projects\\ecommerce\\client\\src\\components\\home\\NewArrivals.js":"43","D:\\projects\\ecommerce\\client\\src\\components\\cards\\SingleProduct.js":"44","D:\\projects\\ecommerce\\client\\src\\components\\cards\\LoadingCard.js":"45","D:\\projects\\ecommerce\\client\\src\\functions\\rating.js":"46","D:\\projects\\ecommerce\\client\\src\\components\\cards\\ProductListItem.js":"47","D:\\projects\\ecommerce\\client\\src\\components\\modal\\RatingModal.js":"48","D:\\projects\\ecommerce\\client\\src\\pages\\Shop.js":"49","D:\\projects\\ecommerce\\client\\src\\pages\\sub\\SubHome.js":"50","D:\\projects\\ecommerce\\client\\src\\pages\\category\\CategoryHome.js":"51","D:\\projects\\ecommerce\\client\\src\\reducers\\searchReducer.js":"52","D:\\projects\\ecommerce\\client\\src\\components\\forms\\Star.js":"53","D:\\projects\\ecommerce\\client\\src\\components\\category\\CategoryList.js":"54","D:\\projects\\ecommerce\\client\\src\\components\\sub\\SubList.js":"55","D:\\projects\\ecommerce\\client\\src\\components\\forms\\Search.js":"56","D:\\projects\\ecommerce\\client\\src\\components\\drawer\\SideDrawer.js":"57","D:\\projects\\ecommerce\\client\\src\\reducers\\drawerReducer.js":"58","D:\\projects\\ecommerce\\client\\src\\reducers\\cartReducer.js":"59","D:\\projects\\ecommerce\\client\\src\\pages\\Cart.js":"60","D:\\projects\\ecommerce\\client\\src\\components\\cards\\ProductCardInCheckout.js":"61","D:\\projects\\ecommerce\\client\\src\\pages\\Checkout.js":"62","D:\\projects\\ecommerce\\client\\src\\functions\\user.js":"63","D:\\projects\\ecommerce\\client\\src\\pages\\Payment.js":"64","D:\\projects\\ecommerce\\client\\src\\reducers\\couponReducer.js":"65","D:\\projects\\ecommerce\\client\\src\\components\\cards\\ShowPaymentInfo.js":"66","D:\\projects\\ecommerce\\client\\src\\components\\StripeCheckout.js":"67","D:\\projects\\ecommerce\\client\\src\\functions\\stripe.js":"68","D:\\projects\\ecommerce\\client\\src\\pages\\admin\\coupon\\CreateCouponPage.js":"69","D:\\projects\\ecommerce\\client\\src\\functions\\coupon.js":"70","D:\\projects\\ecommerce\\client\\src\\components\\order\\Invoice.js":"71","D:\\projects\\ecommerce\\client\\src\\reducers\\CODReducer.js":"72","D:\\projects\\ecommerce\\client\\src\\functions\\admin.js":"73","D:\\projects\\ecommerce\\client\\src\\components\\order\\Orders.js":"74"},{"size":636,"mtime":1607067080971,"results":"75","hashOfConfig":"76"},{"size":4265,"mtime":1609428536842,"results":"77","hashOfConfig":"76"},{"size":1273,"mtime":1608795905128,"results":"78","hashOfConfig":"76"},{"size":1768,"mtime":1607424074388,"results":"79","hashOfConfig":"76"},{"size":6022,"mtime":1608724675801,"results":"80","hashOfConfig":"76"},{"size":3051,"mtime":1609165576020,"results":"81","hashOfConfig":"76"},{"size":577,"mtime":1606998038711,"results":"82","hashOfConfig":"76"},{"size":547,"mtime":1609754516969,"results":"83","hashOfConfig":"76"},{"size":3492,"mtime":1607590321600,"results":"84","hashOfConfig":"76"},{"size":262,"mtime":1607067066964,"results":"85","hashOfConfig":"76"},{"size":1978,"mtime":1607424341726,"results":"86","hashOfConfig":"76"},{"size":1638,"mtime":1609915320371,"results":"87","hashOfConfig":"76"},{"size":637,"mtime":1608032730792,"results":"88","hashOfConfig":"76"},{"size":2022,"mtime":1607513064732,"results":"89","hashOfConfig":"76"},{"size":1334,"mtime":1609502612046,"results":"90","hashOfConfig":"76"},{"size":3469,"mtime":1609500147386,"results":"91","hashOfConfig":"76"},{"size":434,"mtime":1607515732002,"results":"92","hashOfConfig":"76"},{"size":956,"mtime":1607515648372,"results":"93","hashOfConfig":"76"},{"size":738,"mtime":1607511528509,"results":"94","hashOfConfig":"76"},{"size":656,"mtime":1608120201033,"results":"95","hashOfConfig":"76"},{"size":3655,"mtime":1608122138487,"results":"96","hashOfConfig":"76"},{"size":1972,"mtime":1608210057483,"results":"97","hashOfConfig":"76"},{"size":4710,"mtime":1608535452329,"results":"98","hashOfConfig":"76"},{"size":3136,"mtime":1608542803729,"results":"99","hashOfConfig":"76"},{"size":3387,"mtime":1608547460095,"results":"100","hashOfConfig":"76"},{"size":2271,"mtime":1608282079041,"results":"101","hashOfConfig":"76"},{"size":1005,"mtime":1608544268308,"results":"102","hashOfConfig":"76"},{"size":808,"mtime":1608535999363,"results":"103","hashOfConfig":"76"},{"size":1465,"mtime":1607594746904,"results":"104","hashOfConfig":"76"},{"size":1666,"mtime":1608811618957,"results":"105","hashOfConfig":"76"},{"size":580,"mtime":1608307309444,"results":"106","hashOfConfig":"76"},{"size":556,"mtime":1607958756980,"results":"107","hashOfConfig":"76"},{"size":4744,"mtime":1607691313248,"results":"108","hashOfConfig":"109"},{"size":3216,"mtime":1608545292201,"results":"110","hashOfConfig":"76"},{"size":1008,"mtime":1608282233619,"results":"111","hashOfConfig":"76"},{"size":4510,"mtime":1608553658788,"results":"112","hashOfConfig":"76"},{"size":4796,"mtime":1608547621355,"results":"113","hashOfConfig":"76"},{"size":5141,"mtime":1608553774184,"results":"114","hashOfConfig":"76"},{"size":2225,"mtime":1608899052754,"results":"115","hashOfConfig":"76"},{"size":2747,"mtime":1609417880209,"results":"116","hashOfConfig":"76"},{"size":1865,"mtime":1608736740780,"results":"117","hashOfConfig":"76"},{"size":325,"mtime":1608737317436,"results":"118","hashOfConfig":"76"},{"size":1865,"mtime":1608632040883,"results":"119","hashOfConfig":"76"},{"size":4697,"mtime":1609513680389,"results":"120","hashOfConfig":"76"},{"size":532,"mtime":1608812017132,"results":"121","hashOfConfig":"76"},{"size":925,"mtime":1608893127274,"results":"122","hashOfConfig":"76"},{"size":2539,"mtime":1608639288713,"results":"123","hashOfConfig":"76"},{"size":1488,"mtime":1608893040475,"results":"124","hashOfConfig":"76"},{"size":12185,"mtime":1609238323285,"results":"125","hashOfConfig":"76"},{"size":1499,"mtime":1608796158432,"results":"126","hashOfConfig":"76"},{"size":1653,"mtime":1608795380312,"results":"127","hashOfConfig":"76"},{"size":228,"mtime":1608807694736,"results":"128","hashOfConfig":"76"},{"size":455,"mtime":1608892020918,"results":"129","hashOfConfig":"76"},{"size":1122,"mtime":1608793588127,"results":"130","hashOfConfig":"76"},{"size":1058,"mtime":1608795860704,"results":"131","hashOfConfig":"76"},{"size":1093,"mtime":1608808333653,"results":"132","hashOfConfig":"76"},{"size":2344,"mtime":1609153577387,"results":"133","hashOfConfig":"76"},{"size":210,"mtime":1609152426812,"results":"134","hashOfConfig":"76"},{"size":430,"mtime":1608902774507,"results":"135","hashOfConfig":"76"},{"size":4033,"mtime":1609754634213,"results":"136","hashOfConfig":"76"},{"size":4565,"mtime":1609166705342,"results":"137","hashOfConfig":"76"},{"size":6504,"mtime":1609757863802,"results":"138","hashOfConfig":"76"},{"size":2237,"mtime":1609757216849,"results":"139","hashOfConfig":"76"},{"size":650,"mtime":1609399300220,"results":"140","hashOfConfig":"76"},{"size":206,"mtime":1609326395768,"results":"141","hashOfConfig":"76"},{"size":1046,"mtime":1609502574724,"results":"142","hashOfConfig":"76"},{"size":5695,"mtime":1609498646378,"results":"143","hashOfConfig":"76"},{"size":259,"mtime":1609429936497,"results":"144","hashOfConfig":"76"},{"size":5518,"mtime":1609323495924,"results":"145","hashOfConfig":"76"},{"size":525,"mtime":1609254800150,"results":"146","hashOfConfig":"76"},{"size":3069,"mtime":1609496761116,"results":"147","hashOfConfig":"76"},{"size":192,"mtime":1609754470052,"results":"148","hashOfConfig":"76"},{"size":440,"mtime":1609501233359,"results":"149","hashOfConfig":"76"},{"size":3189,"mtime":1609758053975,"results":"150","hashOfConfig":"76"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},"1aigllz",{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"153"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"153"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"153"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"153"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"153"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"153"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"153"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"153"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"153"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"153"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"153"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"153"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"153"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"232"},"1gycop0",{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"153"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"153"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"153"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"153"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"153"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"153"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"153"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"153"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"153"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"153"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"153"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"153"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"153"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"153"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"153"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"153"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"153"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"153"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},"D:\\projects\\ecommerce\\client\\src\\index.js",[],["334","335"],"D:\\projects\\ecommerce\\client\\src\\App.js",[],"D:\\projects\\ecommerce\\client\\src\\pages\\Home.js",[],"D:\\projects\\ecommerce\\client\\src\\pages\\auth\\Register.js",["336"],"import React, { useState, useEffect } from 'react'\r\nimport { auth } from '../../firebase'\r\nimport { toast } from 'react-toastify'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst Register = ({ history }) => {\r\n    const [email, setEmail] = useState(\"\")\r\n\r\n    const { user } = useSelector((state) => ({ ...state }))\r\n\r\n    useEffect(() => {\r\n        if (user && user.token) history.push(\"/\")\r\n    }, [user])\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        const config = {\r\n            url: process.env.REACT_APP_REGISTER_REDIRECT_URL,\r\n            handleCodeInApp: true\r\n        }\r\n\r\n        await auth.sendSignInLinkToEmail(email, config)\r\n        toast.success(`Email is sent to ${email}. Click the link to complete your registration`)\r\n\r\n        //Save user email in local storage\r\n        window.localStorage.setItem(\"emailForRegistartion\", email)\r\n\r\n        //Clear state\r\n        setEmail(\"\")\r\n    }\r\n\r\n    return (\r\n        <div className=\"container p-5\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 offset-md-3\">\r\n                    <h4>Register</h4>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <input\r\n                            type=\"email\"\r\n                            className=\"form-control\"\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                            autoFocus\r\n                        />\r\n                        <button type=\"submit\" className=\"btn btn-raised\">\r\n                            Register\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Register;\r\n","D:\\projects\\ecommerce\\client\\src\\pages\\auth\\Login.js",[],"D:\\projects\\ecommerce\\client\\src\\components\\nav\\Header.js",["337"],"import React, { useState } from 'react'\r\nimport { Badge, Menu } from \"antd\"\r\nimport {\r\n    AppstoreOutlined,\r\n    SettingOutlined,\r\n    UserOutlined,\r\n    UserAddOutlined,\r\n    LogoutOutlined,\r\n    ShoppingOutlined,\r\n    ShoppingCartOutlined,\r\n    CarTwoTone\r\n} from '@ant-design/icons';\r\nimport { Link } from 'react-router-dom'\r\nimport firebase from 'firebase'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Search from '../forms/Search'\r\n\r\nconst { SubMenu, Item } = Menu;\r\n\r\nconst Header = () => {\r\n    const [current, setCurrent] = useState(\"home\")\r\n    let dispatch = useDispatch()\r\n    let history = useHistory()\r\n    let { user, cart } = useSelector((state) => ({ ...state }))\r\n\r\n    const handleClick = (e) => {\r\n        setCurrent(e.key)\r\n    }\r\n\r\n    const logout = () => {\r\n        firebase.auth().signOut()\r\n        dispatch({\r\n            type: \"LOGOUT\",\r\n            payload: null\r\n        })\r\n        history.push(\"/login\")\r\n    }\r\n\r\n    return (\r\n        <Menu onClick={handleClick} selectedKeys={[current]} mode=\"horizontal\">\r\n            <Item key=\"home\" icon={<AppstoreOutlined />}>\r\n                <Link to=\"/\">Home</Link>\r\n            </Item>\r\n\r\n            <Item key=\"shop\" icon={<ShoppingOutlined />}>\r\n                <Link to=\"/shop\">Shop</Link>\r\n            </Item>\r\n\r\n            <Item key=\"cart\" icon={<ShoppingCartOutlined />}>\r\n                <Link to=\"/cart\">\r\n                    <Badge count={cart.length} offset={[9, 0]}>\r\n                        Cart\r\n                    </Badge>\r\n                </Link>\r\n            </Item>\r\n\r\n            {!user && (\r\n                <Item key=\"register\" icon={<UserAddOutlined />} className=\"float-right\">\r\n                    <Link to=\"/register\">Register</Link>\r\n                </Item>\r\n            )}\r\n\r\n            {!user && (\r\n                <Item key=\"login\" icon={<UserOutlined />} className=\"float-right\">\r\n                    <Link to=\"/login\">Login</Link>\r\n                </Item>\r\n            )}\r\n\r\n            {user && (\r\n                <SubMenu\r\n                    icon={<SettingOutlined />}\r\n                    title={user.email && user.email.split(\"@\")[0]}\r\n                    className=\"float-right\"\r\n                >\r\n                    {user && user.role === \"subscriber\" && (\r\n                        <Item>\r\n                            <Link to=\"/user/history\">Dashboard</Link>\r\n                        </Item>\r\n                    )}\r\n\r\n                    {user && user.role === \"admin\" && (\r\n                        <Item>\r\n                            <Link to=\"/admin/dashboard\">Dashboard</Link>\r\n                        </Item>\r\n                    )}\r\n\r\n                    <Item icon={<LogoutOutlined />} onClick={logout}>\r\n                        Logout\r\n                    </Item>\r\n                </SubMenu>\r\n            )}\r\n\r\n            <span className=\"float-right p-1\">\r\n                <Search />\r\n            </span>\r\n        </Menu>\r\n    )\r\n}\r\n\r\nexport default Header","D:\\projects\\ecommerce\\client\\src\\firebase.js",[],"D:\\projects\\ecommerce\\client\\src\\reducers\\index.js",[],"D:\\projects\\ecommerce\\client\\src\\pages\\auth\\RegisterComplete.js",["338"],"import React, { useState, useEffect } from 'react'\r\nimport { auth } from '../../firebase'\r\nimport { toast } from 'react-toastify'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { createOrUpdateUser } from '../../functions/auth'\r\n\r\nconst RegisterComplete = (props) => {\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n\r\n    let dispatch = useDispatch()\r\n\r\n    const { user } = useSelector((state) => ({ ...state }))\r\n\r\n    useEffect(() => {\r\n        setEmail(window.localStorage.getItem(\"emailForRegistration\"))\r\n    }, [])\r\n\r\n    let history = useHistory()\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        // validation\r\n        if (!email || !password) {\r\n            toast.error(\"email and password is required\")\r\n        }\r\n\r\n        if (password.length < 6) {\r\n            toast.error(\"password must be at least 6 characters\")\r\n        }\r\n\r\n        try {\r\n            const result = await auth.signInWithEmailLink(email, window.location.href)\r\n            if (result.user.emailVerified) {\r\n                // remove user email from local storage\r\n                window.localStorage.removeItem(\"emailForRegistartion\")\r\n                // get user id token\r\n                let user = auth.currentUser\r\n                await user.updatePassword(password)\r\n                const idTokenResult = await user.getIdTokenResult()\r\n                createOrUpdateUser(idTokenResult.token)\r\n                    .then((res) => {\r\n                        dispatch({\r\n                            type: \"LOGGED_IN_USER\",\r\n                            payload: {\r\n                                name: res.data.name,\r\n                                email: res.data.email,\r\n                                token: idTokenResult.token,\r\n                                role: res.data.role,\r\n                                _id: res.data._id\r\n                            }\r\n                        })\r\n                    })\r\n                    .catch((err) => console.log(err))\r\n                history.push(\"/\")\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n            toast.error(error.message)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container p-5\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 offset-md-3\">\r\n                    <h4>Register Complete</h4>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <input\r\n                            type=\"email\"\r\n                            className=\"form-control\"\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        />\r\n                        <input\r\n                            type=\"password\"\r\n                            className=\"form-control\"\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                            placeholder=\"password\"\r\n                            autoFocus\r\n                        />\r\n                        <br />\r\n                        <button type=\"submit\" className=\"btn btn-raised\">\r\n                            Complete Registration\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RegisterComplete;\r\n","D:\\projects\\ecommerce\\client\\src\\reducers\\userReducer.js",[],"D:\\projects\\ecommerce\\client\\src\\pages\\auth\\ForgotPassword.js",["339"],"import React, { useState, useEffect } from 'react'\r\nimport { auth } from '../../firebase'\r\nimport { toast } from 'react-toastify'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst ForgotPassword = ({ history }) => {\r\n    const [email, setEmail] = useState(\"\")\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const { user } = useSelector((state) => ({ ...state }))\r\n\r\n    useEffect(() => {\r\n        if (user && user.token) history.push(\"/\")\r\n    }, [user])\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        setLoading(true)\r\n\r\n        const config = {\r\n            url: process.env.REACT_APP_FORGOT_PASSWORD_REDIRECT,\r\n            handleCodeInApp: true\r\n        }\r\n\r\n        await auth.sendPasswordResetEmail(email, config)\r\n            .then(() => {\r\n                setEmail(\"\")\r\n                setLoading(false)\r\n                toast.success(\"Check your email for password reset link\")\r\n            })\r\n            .catch((error) => {\r\n                setLoading(false)\r\n                toast.error(error.message)\r\n                console.log(\"ERROR MSG IN FORGOT PASSWORD\", error)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className=\"container col-md-6 offset-md-3 p-5\">\r\n            {loading ? (\r\n                <h4 className=\"text-danger\">Loading</h4>\r\n            ) : (\r\n                    <h4>Forgot Password</h4>\r\n                )}\r\n\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"email\"\r\n                    className=\"form-control\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    placeholder=\"Type Your email\"\r\n                    autoFocus\r\n                />\r\n                <br />\r\n                <button className=\"btn btn-raised\" disabled={!email}>\r\n                    Submit\r\n                </button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ForgotPassword","D:\\projects\\ecommerce\\client\\src\\pages\\user\\Wishlist.js",["340","341"],"import React, { useState, useEffect } from 'react'\r\nimport UserNav from '../../components/nav/UserNav'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getWishlist, removeWishlist } from '../../functions/user'\r\nimport { Link } from 'react-router-dom'\r\nimport { DeleteOutlined } from '@ant-design/icons'\r\n\r\nconst Wishlist = () => {\r\n    const [wishlist, setWishlist] = useState([])\r\n    const { user } = useSelector((state) => ({ ...state }))\r\n\r\n    useEffect(() => {\r\n        loadWishlist()\r\n    }, [])\r\n\r\n    const loadWishlist = () =>\r\n        getWishlist(user.token).then((res) => {\r\n            setWishlist(res.data.wishlist)\r\n        })\r\n\r\n    const handleRemove = (productId) =>\r\n        removeWishlist(productId, user.token).then((res) => {\r\n            loadWishlist()\r\n        })\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-2\">\r\n                    <UserNav />\r\n                </div>\r\n                <div className=\"col\">\r\n                    <h4>Wishlist</h4>\r\n                    {wishlist.map((p) => (\r\n                        <div key={p._id} className=\"alert alert-secondary\">\r\n                            <Link to={`/product/${p.slug}`}>{p.title}</Link>\r\n                            <span className=\"btn btn-sm\" onClick={() => handleRemove(p._id)}>\r\n                                <DeleteOutlined className=\"text-danger\" />\r\n                            </span>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Wishlist","D:\\projects\\ecommerce\\client\\src\\functions\\auth.js",[],"D:\\projects\\ecommerce\\client\\src\\pages\\user\\Password.js",[],"D:\\projects\\ecommerce\\client\\src\\pages\\admin\\AdminDashboard.js",["342","343"],"import React, { useState, useEffect } from 'react'\r\nimport AdminNav from '../../components/nav/AdminNav'\r\nimport { getOrders, changeStatus } from '../../functions/admin'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { toast } from 'react-toastify'\r\nimport Orders from '../../components/order/Orders'\r\n\r\nconst AdminDashboard = () => {\r\n    const [orders, setOrders] = useState([])\r\n    const { user } = useSelector((state) => ({ ...state }))\r\n\r\n    useEffect(() => {\r\n        loadOrders()\r\n    }, [])\r\n\r\n    const loadOrders = () =>\r\n        getOrders(user.token).then((res) => {\r\n            setOrders(res.data)\r\n        })\r\n\r\n    const handleStatusChange = (orderId, orderStatus) => {\r\n        changeStatus(orderId, orderStatus, user.token).then((res) => {\r\n            toast.success(\"Status updated\")\r\n            loadOrders()\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-2\">\r\n                    <AdminNav />\r\n                </div>\r\n                <div className=\"col-md-10\">\r\n                    Admin Dashboard\r\n                    <Orders orders={orders} handleStatusChange={handleStatusChange} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminDashboard","D:\\projects\\ecommerce\\client\\src\\pages\\user\\History.js",["344","345","346"],"import React, { useEffect, useState } from 'react'\r\nimport UserNav from '../../components/nav/UserNav'\r\nimport { getUserOrders } from '../../functions/user'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { CheckCircleOutlined, CloseCircleOutlined } from '@ant-design/icons'\r\nimport { toast } from 'react-toastify'\r\nimport ShowPaymentInfo from '../../components/cards/ShowPaymentInfo'\r\nimport { PDFDownloadLink } from '@react-pdf/renderer'\r\nimport Invoice from '../../components/order/Invoice'\r\n\r\nconst History = () => {\r\n    const [orders, setOrders] = useState([])\r\n    const { user } = useSelector((state) => ({ ...state }))\r\n\r\n    useEffect(() => {\r\n        loadUserOrders()\r\n    }, [])\r\n\r\n    const loadUserOrders = () =>\r\n        getUserOrders(user.token).then((res) => {\r\n            setOrders(res.data)\r\n        })\r\n\r\n    const showOrderInTable = (order) => (\r\n        <table className=\"table table-bordered\">\r\n            <thead className=\"thead-light\">\r\n                <tr>\r\n                    <th scope=\"col\">Title</th>\r\n                    <th scope=\"col\">Price</th>\r\n                    <th scope=\"col\">Brand</th>\r\n                    <th scope=\"col\">Color</th>\r\n                    <th scope=\"col\">Count</th>\r\n                    <th scope=\"col\">Shipping</th>\r\n                </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n                {order.products.map((p, i) => (\r\n                    <tr key={i}>\r\n                        <td>\r\n                            <p>{p.product.title}</p>\r\n                        </td>\r\n                        <td>{p.product.price}</td>\r\n                        <td>{p.product.brand}</td>\r\n                        <td>{p.color}</td>\r\n                        <td>{p.count}</td>\r\n                        <td>\r\n                            {p.product.shipping === \"Yes\" ? (\r\n                                <CheckCircleOutlined style={{ color: \"green\" }} />\r\n                            ) : (\r\n                                    <CloseCircleOutlined style={{ color: \"red\" }} />\r\n                                )}\r\n                        </td>\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        </table>\r\n    )\r\n\r\n    const showDownloadLink = (order) => (\r\n        <PDFDownloadLink\r\n            document={<Invoice order={order} />}\r\n            fileName=\"invoice.pdf\"\r\n            className=\"btn btn-sm btn-block btn-outline-primary\"\r\n        >\r\n            Download PDF\r\n        </PDFDownloadLink>\r\n\r\n    )\r\n\r\n    const showEachOrders = () =>\r\n        orders.map((order, i) => (\r\n            <div key={i} className=\"m-5 p-3 card\">\r\n                <ShowPaymentInfo order={order} />\r\n                {showOrderInTable(order)}\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        {showDownloadLink(order)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ))\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-2\">\r\n                    <UserNav />\r\n                </div>\r\n                <div className=\"col text-center\">\r\n                    <h4>\r\n                        {orders.length > 0 ? \"User purchase orders\" : \"No purchase orders\"}\r\n                    </h4>\r\n                    {showEachOrders()}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default History","D:\\projects\\ecommerce\\client\\src\\components\\routes\\UserRoute.js",["347"],"import React from 'react'\r\nimport { Route, Link } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\nimport LoadingToRedirect from './LoadingToRedirect'\r\n\r\nconst UserRoute = ({ children, ...rest }) => {\r\n    const { user } = useSelector((state) => ({ ...state }))\r\n\r\n    return user && user.token ? (\r\n        <Route {...rest} />\r\n    ) : (\r\n            <LoadingToRedirect />\r\n        )\r\n}\r\n\r\nexport default UserRoute","D:\\projects\\ecommerce\\client\\src\\components\\routes\\AdminRoute.js",["348"],"import React, { useEffect, useState } from 'react'\r\nimport { Route, Link } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\nimport LoadingToRedirect from './LoadingToRedirect'\r\nimport { currentAdmin } from '../../functions/auth'\r\n\r\nconst AdminRoute = ({ children, ...rest }) => {\r\n    const { user } = useSelector((state) => ({ ...state }))\r\n    const [ok, setOk] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if (user && user.token) {\r\n            currentAdmin(user.token)\r\n                .then((res) => {\r\n                    console.log(\"CURRENT ADMIN RES\", res)\r\n                    setOk(true)\r\n                })\r\n                .catch((err) => {\r\n                    console.log(\"ADMIN ROUTE ERR\", err)\r\n                    setOk(false)\r\n                })\r\n        }\r\n    }, [user])\r\n\r\n    return ok ? (\r\n        <Route {...rest} />\r\n    ) : (\r\n            <LoadingToRedirect />\r\n        )\r\n}\r\n\r\nexport default AdminRoute","D:\\projects\\ecommerce\\client\\src\\components\\nav\\UserNav.js",[],"D:\\projects\\ecommerce\\client\\src\\components\\routes\\LoadingToRedirect.js",[],"D:\\projects\\ecommerce\\client\\src\\pages\\admin\\category\\CategoryCreate.js",[],"D:\\projects\\ecommerce\\client\\src\\pages\\admin\\category\\CategoryUpdate.js",["349"],"import React, { useState, useEffect } from 'react'\r\nimport AdminNav from '../../../components/nav/AdminNav'\r\nimport { toast } from 'react-toastify'\r\nimport { useSelector } from 'react-redux'\r\nimport { updateCategory, getCategory } from '../../../functions/category'\r\nimport CategoryForm from '../../../components/forms/CategoryForm'\r\n\r\nconst CategoryUpdate = ({ history, match }) => {\r\n    const { user } = useSelector((state) => ({ ...state }))\r\n\r\n    const [name, setName] = useState(\"\")\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    useEffect(() => {\r\n        loadCategory()\r\n    }, [])\r\n\r\n    const loadCategory = () =>\r\n        getCategory(match.params.slug).then((c) => setName(c.data.name));\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        setLoading(true)\r\n        updateCategory(match.params.slug, { name }, user.token)\r\n            .then((res) => {\r\n                setLoading(false)\r\n                setName(\"\")\r\n                toast.success('Category is updated')\r\n                history.push(\"/admin/category\")\r\n            }).catch((err) => {\r\n                console.log(err)\r\n                setLoading(false)\r\n                toast.error(err.message)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-2\">\r\n                    <AdminNav />\r\n                </div>\r\n                <div className=\"col\">\r\n                    {loading ? (\r\n                        <h4 className=\"text-danger\">loading...</h4>\r\n                    ) : (\r\n                            <h4>Update Category</h4>\r\n                        )}\r\n                    <CategoryForm\r\n                        handleSubmit={handleSubmit}\r\n                        name={name}\r\n                        setName={setName}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CategoryUpdate","D:\\projects\\ecommerce\\client\\src\\pages\\admin\\sub\\SubCreate.js",["350"],"import React, { useState, useEffect } from 'react'\r\nimport AdminNav from '../../../components/nav/AdminNav'\r\nimport { toast } from 'react-toastify'\r\nimport { useSelector } from 'react-redux'\r\nimport { getCategories } from '../../../functions/category'\r\nimport { createSub, getSub, removeSub, getSubs } from '../../../functions/sub'\r\nimport { Link } from 'react-router-dom'\r\nimport { EditOutlined, DeleteOutlined } from '@ant-design/icons'\r\nimport CategoryForm from '../../../components/forms/CategoryForm'\r\nimport LocalSearch from '../../../components/forms/LocalSearch'\r\n\r\nconst SubCreate = () => {\r\n    const { user } = useSelector((state) => ({ ...state }))\r\n\r\n    const [name, setName] = useState(\"\")\r\n    const [loading, setLoading] = useState(false)\r\n    const [categories, setCategories] = useState([])\r\n    const [category, setCategory] = useState(\"\")\r\n    const [subs, setSubs] = useState([])\r\n\r\n    const [keyword, setKeyword] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        loadCategories()\r\n        loadSubs()\r\n    }, [])\r\n\r\n    const loadCategories = () =>\r\n        getCategories().then((c) => setCategories(c.data))\r\n\r\n\r\n    const loadSubs = () =>\r\n        getSubs().then((s) => setSubs(s.data))\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        //console.log(name)\r\n        setLoading(true)\r\n        createSub({ name, parent: category }, user.token)\r\n            .then((res) => {\r\n                setLoading(false)\r\n                setName(\"\")\r\n                toast.success('Sub category is created')\r\n                loadSubs()\r\n            }).catch((err) => {\r\n                console.log(err)\r\n                setLoading(false)\r\n                toast.error(err.message)\r\n            })\r\n    }\r\n\r\n    const handleRemove = async (slug) => {\r\n        if (window.confirm(\"Deleted?\")) {\r\n            setLoading(true)\r\n            removeSub(slug, user.token)\r\n                .then((res) => {\r\n                    setLoading(false)\r\n                    toast.error('Sub category deleted')\r\n                    loadSubs()\r\n                })\r\n                .catch((err) => {\r\n                    setLoading(false)\r\n                    toast.error(err.message)\r\n                })\r\n        }\r\n    }\r\n\r\n    const searched = (keyword) => (c) => c.name.toLowerCase().includes(keyword)\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-2\">\r\n                    <AdminNav />\r\n                </div>\r\n                <div className=\"col\">\r\n                    {loading ? (\r\n                        <h4 className=\"text-danger\">loading...</h4>\r\n                    ) : (\r\n                            <h4>Create Sub Category</h4>\r\n                        )}\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Parent Category</label>\r\n                        <select\r\n                            name=\"category\"\r\n                            className=\"form-control\"\r\n                            onChange={(e) => setCategory(e.target.value)}\r\n                        >\r\n                            <option>Please Select</option>\r\n                            {categories.length > 0 &&\r\n                                categories.map((c) => (\r\n                                    <option key={c._id} value={c._id}>\r\n                                        {c.name}\r\n                                    </option>\r\n                                ))}\r\n                        </select>\r\n                    </div>\r\n                    <CategoryForm\r\n                        handleSubmit={handleSubmit}\r\n                        setName={setName}\r\n                        name={name}\r\n                    />\r\n\r\n                    <LocalSearch keyword={keyword} setKeyword={setKeyword} />\r\n                    <hr />\r\n                    {subs.filter(searched(keyword)).map((s) => (\r\n                        <div className=\"alert alert-secondary\" key={s._id}>\r\n                            {s.name}\r\n                            <span onClick={() => handleRemove(s.slug)} className=\"btn btn-sm float-right\">\r\n                                <DeleteOutlined className=\"text-warning\" />\r\n                            </span>\r\n                            <Link to={`/admin/sub/${s.slug}`}>\r\n                                <span className=\"btn btn-sm float-right\">\r\n                                    <EditOutlined className=\"text-warning\" />\r\n                                </span>\r\n                            </Link>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SubCreate","D:\\projects\\ecommerce\\client\\src\\pages\\admin\\sub\\SubUpdate.js",["351"],"import React, { useState, useEffect } from 'react'\r\nimport AdminNav from '../../../components/nav/AdminNav'\r\nimport { toast } from 'react-toastify'\r\nimport { useSelector } from 'react-redux'\r\nimport { getCategories } from '../../../functions/category'\r\nimport { getSub, updateSub } from '../../../functions/sub'\r\nimport CategoryForm from '../../../components/forms/CategoryForm'\r\n\r\nconst SubUpdate = ({ match, history }) => {\r\n    const { user } = useSelector((state) => ({ ...state }))\r\n\r\n    const [name, setName] = useState(\"\")\r\n    const [loading, setLoading] = useState(false)\r\n    const [categories, setCategories] = useState([])\r\n    const [parent, setParent] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        loadCategories()\r\n        loadSub()\r\n    }, [])\r\n\r\n    const loadCategories = () =>\r\n        getCategories().then((c) => setCategories(c.data))\r\n\r\n\r\n    const loadSub = () =>\r\n        getSub(match.params.slug).then((s) => {\r\n            setName(s.data.name)\r\n            setParent(s.data.parent)\r\n        })\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        setLoading(true)\r\n        updateSub(match.params.slug, { name, parent }, user.token)\r\n            .then((res) => {\r\n                setLoading(false)\r\n                setName(\"\")\r\n                toast.success('Sub category is updated')\r\n                history.push(\"/admin/sub\")\r\n            }).catch((err) => {\r\n                console.log(err)\r\n                setLoading(false)\r\n                toast.error(err.message)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-2\">\r\n                    <AdminNav />\r\n                </div>\r\n                <div className=\"col\">\r\n                    {loading ? (\r\n                        <h4 className=\"text-danger\">loading...</h4>\r\n                    ) : (\r\n                            <h4>Update Sub Category</h4>\r\n                        )}\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Parent Category</label>\r\n                        <select\r\n                            name=\"category\"\r\n                            className=\"form-control\"\r\n                            onChange={(e) => setParent(e.target.value)}\r\n                        >\r\n                            <option value=\"\">Select Category</option>\r\n                            {categories.length > 0 &&\r\n                                categories.map((c) => (\r\n                                    <option key={c._id} value={c._id} selected={c._id === parent}>\r\n                                        {c.name}\r\n                                    </option>\r\n                                ))}\r\n                        </select>\r\n                    </div>\r\n                    <CategoryForm\r\n                        handleSubmit={handleSubmit}\r\n                        setName={setName}\r\n                        name={name}\r\n                    />\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SubUpdate","D:\\projects\\ecommerce\\client\\src\\pages\\admin\\product\\ProductCreate.js",["352"],"import React, { useState, useEffect } from 'react'\r\nimport AdminNav from '../../../components/nav/AdminNav'\r\nimport { toast } from 'react-toastify'\r\nimport { useSelector } from 'react-redux'\r\nimport { createProduct } from '../../../functions/product'\r\nimport ProductCreateForm from '../../../components/forms/ProductCreateForm'\r\nimport { getCategories, getCategorySubs } from '../../../functions/category'\r\nimport FileUpload from '../../../components/forms/FileUpload'\r\nimport { LoadingOutlined } from '@ant-design/icons'\r\n\r\nconst initialState = {\r\n    title: \"\",\r\n    description: \"\",\r\n    price: \"\",\r\n    categories: [],\r\n    category: \"\",\r\n    subs: [],\r\n    shipping: \"\",\r\n    quantity: \"\",\r\n    images: [],\r\n    colors: [\"Black\", \"Brown\", \"Silver\", \"White\", \"Blue\"],\r\n    brands: [\"Apple\", \"Samsung\", \"Microsoft\", \"Lenovo\", \"ASUS\"],\r\n    color: \"\",\r\n    brand: \"\"\r\n}\r\n\r\nconst ProductCreate = () => {\r\n    const [values, setValues] = useState(initialState)\r\n    const [subOptions, setSubOptions] = useState([])\r\n    const [showSub, setShowSub] = useState(false)\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const { user } = useSelector((state) => ({ ...state }))\r\n\r\n    useEffect(() => {\r\n        loadCategories()\r\n    }, [])\r\n\r\n    const loadCategories = () =>\r\n        getCategories().then((c) => setValues({ ...values, categories: c.data }))\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        createProduct(values, user.token)\r\n            .then((res) => {\r\n                console.log(res)\r\n                toast.success('Product is created')\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n                toast.error(err.message)\r\n            })\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        setValues({ ...values, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    const handleCategoryChange = (e) => {\r\n        e.preventDefault()\r\n        setValues({ ...values, subs: [], category: e.target.value })\r\n        getCategorySubs(e.target.value).then((res) => {\r\n            setSubOptions(res.data)\r\n        })\r\n        setShowSub(true)\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-2\">\r\n                    <AdminNav />\r\n                </div>\r\n\r\n                <div className=\"col-md-10\">\r\n                    {loading ? (\r\n                        <LoadingOutlined className=\"text-danger\" />\r\n                    ) : (\r\n                            <h4>Product Create</h4>\r\n                        )}\r\n                    <div className=\"p-3\">\r\n                        <FileUpload\r\n                            values={values}\r\n                            setValues={setValues}\r\n                            setLoading={setLoading}\r\n                        />\r\n                    </div>\r\n                    <ProductCreateForm\r\n                        handleSubmit={handleSubmit}\r\n                        handleChange={handleChange}\r\n                        setValues={setValues}\r\n                        values={values}\r\n                        handleCategoryChange={handleCategoryChange}\r\n                        subOptions={subOptions}\r\n                        showSub={showSub}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductCreate","D:\\projects\\ecommerce\\client\\src\\pages\\admin\\product\\AllProducts.js",[],"D:\\projects\\ecommerce\\client\\src\\functions\\category.js",[],"D:\\projects\\ecommerce\\client\\src\\functions\\sub.js",[],"D:\\projects\\ecommerce\\client\\src\\components\\nav\\AdminNav.js",[],"D:\\projects\\ecommerce\\client\\src\\functions\\product.js",[],"D:\\projects\\ecommerce\\client\\src\\components\\forms\\CategoryForm.js",[],"D:\\projects\\ecommerce\\client\\src\\components\\forms\\LocalSearch.js",[],"D:\\projects\\ecommerce\\client\\src\\components\\forms\\ProductcreateForm.js",["353","354","355","356","357","358","359","360","361"],"import React from 'react'\r\nimport { Select } from 'antd'\r\n\r\nconst { Option } = Select\r\n\r\nconst ProductCreateForm = ({ handleChange, handleSubmit, values, handleCategoryChange, subOptions, showSub, setValues }) => {\r\n    const {\r\n        title,\r\n        description,\r\n        price,\r\n        categories,\r\n        category,\r\n        subs,\r\n        shipping,\r\n        quantity,\r\n        images,\r\n        colors,\r\n        brands,\r\n        color,\r\n        brand\r\n    } = values\r\n\r\n    return (\r\n\r\n        <form onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n                <label>Title</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"title\"\r\n                    value={title}\r\n                    onChange={handleChange}\r\n                    className=\"form-control\"\r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label>Description</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"description\"\r\n                    value={description}\r\n                    onChange={handleChange}\r\n                    className=\"form-control\"\r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label>Price</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"price\"\r\n                    value={price}\r\n                    onChange={handleChange}\r\n                    className=\"form-control\"\r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label>Shipping</label>\r\n                <select name=\"shipping\" className=\"form-control\" onChange={handleChange}>\r\n                    <option>Please Select</option>\r\n                    <option value=\"No\">No</option>\r\n                    <option value=\"Yes\">Yes</option>\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label>Quantity</label>\r\n                <input\r\n                    type=\"number\"\r\n                    name=\"quantity\"\r\n                    value={quantity}\r\n                    onChange={handleChange}\r\n                    className=\"form-control\"\r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label>Color</label>\r\n                <select name=\"color\" className=\"form-control\" onChange={handleChange}>\r\n                    <option>Please Select</option>\r\n                    {colors.map((c) => {\r\n                        <option key={c} value={c}>\r\n                            {c}\r\n                        </option>\r\n                    })}\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label>brand</label>\r\n                <select name=\"brand\" className=\"form-control\" onChange={handleChange}>\r\n                    <option>Please Select</option>\r\n                    {brands.map((b) => {\r\n                        <option key={b} value={b}>\r\n                            {b}\r\n                        </option>\r\n                    })}\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label>Category</label>\r\n                <select\r\n                    name=\"category\"\r\n                    className=\"form-control\"\r\n                    onChange={handleCategoryChange}\r\n                >\r\n                    {categories.length > 0 &&\r\n                        categories.map((c) => {\r\n                            <option key={c._id} value={c._id}>\r\n                                {c.name}\r\n                            </option>\r\n                        })}\r\n                </select>\r\n            </div>\r\n\r\n            {showSub && (\r\n                <div>\r\n                    <label>Sub Categories</label>\r\n                    <Select\r\n                        mode=\"multiple\"\r\n                        style={{ width: \"100%\" }}\r\n                        placeholder=\"Please Select\"\r\n                        value={subs}\r\n                        name=\"subs\"\r\n                        onChange={(value) => setValues({ ...values, subs: value })}\r\n                    >\r\n                        {subOptions.length &&\r\n                            subOptions.map((s) => {\r\n                                <Option key={s._id} value={s._id}>\r\n                                    {s.name}\r\n                                </Option>\r\n                            })}\r\n                    </Select>\r\n                </div>\r\n            )}\r\n\r\n\r\n            <button classname=\"btn btn-outline-info\">Save</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ProductCreateForm",["362","363"],"D:\\projects\\ecommerce\\client\\src\\components\\forms\\FileUpload.js",[],"D:\\projects\\ecommerce\\client\\src\\components\\cards\\AdminProductCard.js",["364"],"import React from 'react'\r\nimport { Card } from 'antd'\r\nimport { EditOutlined, DeleteOutlined } from '@ant-design/icons'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst { Meta } = Card\r\n\r\nconst AdminProductCard = ({ product, handleRemove }) => {\r\n    const { title, description, images, slug } = product\r\n\r\n    return (\r\n        <Card cover={\r\n            <img\r\n                src={images && images.length ? images[0].url : \"\"}\r\n                style={{ height: \"150px\", objectFit: \"cover\" }}\r\n                className=\"p-1\"\r\n            />\r\n        }\r\n            actions={[\r\n                <Link to={`/admin/product/${slug}`}>\r\n                    <EditOutlined className=\"text-warning\" />\r\n                </Link>,\r\n                <DeleteOutlined onClick={() => handleRemove(slug)} className=\"text-danger\" />\r\n            ]}\r\n        >\r\n            <Meta title={title} description={`${description && description.substring(0, 40)}...`} />\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default AdminProductCard","D:\\projects\\ecommerce\\client\\src\\pages\\admin\\product\\ProductUpdate.js",["365","366"],"import React, { useState, useEffect } from 'react'\r\nimport AdminNav from '../../../components/nav/AdminNav'\r\nimport { toast } from 'react-toastify'\r\nimport { useSelector } from 'react-redux'\r\nimport { getProduct, updateProduct } from '../../../functions/product'\r\nimport { getCategories, getCategorySubs } from '../../../functions/category'\r\nimport FileUpload from '../../../components/forms/FileUpload'\r\nimport { LoadingOutlined } from '@ant-design/icons'\r\nimport ProductUpdateForm from '../../../components/forms/ProductUpdateForm'\r\n\r\nconst initialState = {\r\n    title: \"\",\r\n    description: \"\",\r\n    price: \"\",\r\n    category: \"\",\r\n    subs: [],\r\n    shipping: \"\",\r\n    quantity: \"\",\r\n    images: [],\r\n    colors: [\"Black\", \"Brown\", \"Silver\", \"White\", \"Blue\"],\r\n    brands: [\"Apple\", \"Samsung\", \"Microsoft\", \"Lenovo\", \"ASUS\"],\r\n    color: \"\",\r\n    brand: \"\"\r\n}\r\n\r\nconst ProductUpdate = ({ match, history }) => {\r\n    const { user } = useSelector((state) => ({ ...state }))\r\n\r\n    const [values, setValues] = useState(initialState)\r\n    const [subOptions, setSubOptions] = useState([])\r\n    const [categories, setCategories] = useState([])\r\n    const [arrayOfSubs, setArrayOfSubs] = useState([])\r\n    const [selectedCategory, setSelectedCategory] = useState(\"\")\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const { slug } = match.params\r\n\r\n    useEffect(() => {\r\n        loadProduct()\r\n        loadCategories()\r\n    }, [])\r\n\r\n    const loadProduct = () => {\r\n        getProduct(slug).then((p) => {\r\n            setValues({ ...values, ...p.data })\r\n            getCategorySubs(p.data.category._id).then((res) => {\r\n                setSubOptions(res.data)\r\n            })\r\n            let arr = []\r\n            p.data.subs.map((s) => {\r\n                arr.push(s._id)\r\n            })\r\n            setArrayOfSubs((prev) => arr)\r\n        })\r\n    }\r\n\r\n    const loadCategories = () =>\r\n        getCategories().then((c) => setCategories(c.data))\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        setLoading(true)\r\n\r\n        values.subs = arrayOfSubs\r\n        values.category = selectedCategory ? selectedCategory : values.category\r\n\r\n        updateProduct(slug, values, user.token)\r\n            .then((res) => {\r\n                setLoading(false)\r\n                toast.success(\"Product is updated\")\r\n                history.push(\"/admin/products\")\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n                setLoading(false)\r\n                toast.error(err.message)\r\n            })\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        setValues({ ...values, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    const handleCategoryChange = (e) => {\r\n        e.preventDefault()\r\n        setValues({ ...values, subs: [] })\r\n\r\n        setSelectedCategory(e.target.value)\r\n\r\n        getCategorySubs(e.target.value).then((res) => {\r\n            setSubOptions(res.data)\r\n        })\r\n        if (values.category._id === e.target.value) {\r\n            loadProduct()\r\n        }\r\n        setArrayOfSubs([])\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-2\">\r\n                    <AdminNav />\r\n                </div>\r\n\r\n                <div className=\"col-md-10\">\r\n                    {loading ? (\r\n                        <LoadingOutlined className=\"text-danger\" />\r\n                    ) : (\r\n                            <h4>Product Update</h4>\r\n                        )}\r\n                    <div className=\"p-3\">\r\n                        <FileUpload\r\n                            values={values}\r\n                            setValues={setValues}\r\n                            setLoading={setLoading}\r\n                        />\r\n                    </div>\r\n                    <ProductUpdateForm\r\n                        handleSubmit={handleSubmit}\r\n                        handleChange={handleChange}\r\n                        setValues={setValues}\r\n                        values={values}\r\n                        handleCategoryChange={handleCategoryChange}\r\n                        categories={categories}\r\n                        subOptions={subOptions}\r\n                        arrayOfSubs={arrayOfSubs}\r\n                        setArrayOfSubs={setArrayOfSubs}\r\n                        selectedCategory={selectedCategory}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductUpdate","D:\\projects\\ecommerce\\client\\src\\components\\forms\\ProductCreateForm.js",["367","368","369","370","371"],"import React from 'react'\r\nimport { Select } from 'antd'\r\n\r\nconst { Option } = Select\r\n\r\nconst ProductCreateForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    setValues,\r\n    values,\r\n    handleCategoryChange,\r\n    subOptions,\r\n    showSub,\r\n}) => {\r\n    const {\r\n        title,\r\n        description,\r\n        price,\r\n        categories,\r\n        category,\r\n        subs,\r\n        shipping,\r\n        quantity,\r\n        images,\r\n        colors,\r\n        brands,\r\n        color,\r\n        brand\r\n    } = values\r\n\r\n    return (\r\n\r\n        <form onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n                <label>Title</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"title\"\r\n                    value={title}\r\n                    onChange={handleChange}\r\n                    className=\"form-control\"\r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label>Description</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"description\"\r\n                    value={description}\r\n                    onChange={handleChange}\r\n                    className=\"form-control\"\r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label>Price</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"price\"\r\n                    value={price}\r\n                    onChange={handleChange}\r\n                    className=\"form-control\"\r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label>Shipping</label>\r\n                <select name=\"shipping\" className=\"form-control\" onChange={handleChange}>\r\n                    <option>Please Select</option>\r\n                    <option value=\"No\">No</option>\r\n                    <option value=\"Yes\">Yes</option>\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label>Quantity</label>\r\n                <input\r\n                    type=\"number\"\r\n                    name=\"quantity\"\r\n                    value={quantity}\r\n                    onChange={handleChange}\r\n                    className=\"form-control\"\r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label>Color</label>\r\n                <select name=\"color\" className=\"form-control\" onChange={handleChange}>\r\n                    <option>Please Select</option>\r\n                    {colors.map((c) => (\r\n                        <option key={c} value={c}>\r\n                            {c}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label>brand</label>\r\n                <select name=\"brand\" className=\"form-control\" onChange={handleChange}>\r\n                    <option>Please Select</option>\r\n                    {brands.map((b) => (\r\n                        <option key={b} value={b}>\r\n                            {b}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label>Category</label>\r\n                <select\r\n                    name=\"category\"\r\n                    className=\"form-control\"\r\n                    onChange={handleCategoryChange}\r\n                >\r\n                    <option>Please Select</option>\r\n                    {categories.length > 0 &&\r\n                        categories.map((c) => (\r\n                            <option key={c._id} value={c._id}>\r\n                                {c.name}\r\n                            </option>\r\n                        ))}\r\n                </select>\r\n            </div>\r\n\r\n            {showSub && (\r\n                <div>\r\n                    <label>Sub Categories</label>\r\n                    <Select\r\n                        mode=\"multiple\"\r\n                        style={{ width: \"100%\" }}\r\n                        placeholder=\"Please Select\"\r\n                        value={subs}\r\n                        onChange={(value) => setValues({ ...values, subs: value })}\r\n                    >\r\n                        {subOptions.length &&\r\n                            subOptions.map((s) => (\r\n                                <Option key={s._id} value={s._id}>\r\n                                    {s.name}\r\n                                </Option>\r\n                            ))}\r\n                    </Select>\r\n                </div>\r\n            )}\r\n\r\n\r\n            <button className=\"btn btn-outline-info\">Save</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ProductCreateForm","D:\\projects\\ecommerce\\client\\src\\components\\forms\\ProductUpdateForm.js",["372","373"],"import React from 'react'\r\nimport { Select } from 'antd'\r\n\r\nconst { Option } = Select\r\n\r\nconst ProductUpdateForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    setValues,\r\n    values,\r\n    handleCategoryChange,\r\n    categories,\r\n    subOptions,\r\n    arrayOfSubs,\r\n    setArrayOfSubs,\r\n    selectedCategory\r\n}) => {\r\n    const {\r\n        title,\r\n        description,\r\n        price,\r\n        category,\r\n        subs,\r\n        shipping,\r\n        quantity,\r\n        images,\r\n        colors,\r\n        brands,\r\n        color,\r\n        brand\r\n    } = values\r\n\r\n    return (\r\n\r\n        <form onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n                <label>Title</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"title\"\r\n                    value={title}\r\n                    onChange={handleChange}\r\n                    className=\"form-control\"\r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label>Description</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"description\"\r\n                    value={description}\r\n                    onChange={handleChange}\r\n                    className=\"form-control\"\r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label>Price</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"price\"\r\n                    value={price}\r\n                    onChange={handleChange}\r\n                    className=\"form-control\"\r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label>Shipping</label>\r\n                <select\r\n                    value={shipping === \"Yes\" ? \"Yes\" : \"No\"}\r\n                    name=\"shipping\"\r\n                    className=\"form-control\"\r\n                    onChange={handleChange}\r\n                >\r\n                    <option>Please Select</option>\r\n                    <option value=\"No\">No</option>\r\n                    <option value=\"Yes\">Yes</option>\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label>Quantity</label>\r\n                <input\r\n                    type=\"number\"\r\n                    name=\"quantity\"\r\n                    value={quantity}\r\n                    onChange={handleChange}\r\n                    className=\"form-control\"\r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label>Color</label>\r\n                <select\r\n                    value={color}\r\n                    name=\"color\"\r\n                    className=\"form-control\"\r\n                    onChange={handleChange}\r\n                >\r\n                    <option>Please Select</option>\r\n                    {colors.map((c) => (\r\n                        <option key={c} value={c}>\r\n                            {c}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label>brand</label>\r\n                <select\r\n                    value={brand}\r\n                    name=\"brand\"\r\n                    className=\"form-control\"\r\n                    onChange={handleChange}\r\n                >\r\n                    <option>Please Select</option>\r\n                    {brands.map((b) => (\r\n                        <option key={b} value={b}>\r\n                            {b}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label>Category</label>\r\n                <select\r\n                    name=\"category\"\r\n                    className=\"form-control\"\r\n                    onChange={handleCategoryChange}\r\n                    value={selectedCategory ? selectedCategory : category._id}\r\n                >\r\n                    {categories.length > 0 &&\r\n                        categories.map((c) => (\r\n                            <option key={c._id} value={c._id}>\r\n                                {c.name}\r\n                            </option>\r\n                        ))}\r\n                </select>\r\n            </div>\r\n\r\n            <div>\r\n                <label>Sub Categories</label>\r\n                <Select\r\n                    mode=\"multiple\"\r\n                    style={{ width: \"100%\" }}\r\n                    placeholder=\"Please Select\"\r\n                    value={arrayOfSubs}\r\n                    onChange={(value) => setArrayOfSubs(value)}\r\n                >\r\n                    {subOptions.length &&\r\n                        subOptions.map((s) => (\r\n                            <Option key={s._id} value={s._id}>\r\n                                {s.name}\r\n                            </Option>\r\n                        ))}\r\n                </Select>\r\n            </div>\r\n\r\n            <br />\r\n            <button className=\"btn btn-outline-info\">Save</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ProductUpdateForm","D:\\projects\\ecommerce\\client\\src\\pages\\Product.js",["374","375"],"import React, { useState, useEffect } from 'react'\r\nimport { getProduct, productStar, getRelated } from '../functions/product'\r\nimport SingleProduct from '../components/cards/SingleProduct'\r\nimport { useSelector } from 'react-redux'\r\nimport ProductCard from '../components/cards/ProductCard'\r\n\r\nconst Product = ({ match }) => {\r\n    const [product, setProduct] = useState({})\r\n    const [related, setRelated] = useState([])\r\n    const [star, setStar] = useState(0)\r\n\r\n    const { user } = useSelector((state) => ({ ...state }))\r\n    const { slug } = match.params\r\n\r\n    useEffect(() => {\r\n        loadSingleProduct()\r\n    }, [slug])\r\n\r\n    useEffect(() => {\r\n        if (product.ratings && user) {\r\n            let existingRatingObject = product.ratings.find((ele) => ele.postedBy.toString() === user._id.toString())\r\n            existingRatingObject && setStar(existingRatingObject.star)\r\n        }\r\n    }, [])\r\n\r\n    const loadSingleProduct = () => {\r\n        getProduct(slug).then((res) => {\r\n            setProduct(res.data)\r\n            getRelated(res.data._id).then((res) => setRelated(res.data))\r\n        })\r\n    }\r\n\r\n    const onStarClick = (newRating, name) => {\r\n        setStar(newRating)\r\n        productStar(name, newRating, user.token).then((res) => {\r\n            loadSingleProduct()\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row pt-4\">\r\n                <SingleProduct product={product} onStarClick={onStarClick} star={star} />\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col text-center pt-5 pb-5\">\r\n                    <hr />\r\n                    <div>Related Products</div>\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row pb-5\">\r\n                {related.length\r\n                    ? related.map((r) => (\r\n                        <div key={r._id} className=\"col-md-4\">\r\n                            <ProductCard product={r} />\r\n                        </div>\r\n                    )) : (<div className=\"text-center col\">No product found</div>\r\n                    )}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Product","D:\\projects\\ecommerce\\client\\src\\components\\cards\\ProductCard.js",["376","377","378","379"],"import React, { useState } from 'react'\r\nimport { Card, Tooltip } from 'antd'\r\nimport { EyeOutlined, ShoppingCartOutlined } from '@ant-design/icons'\r\nimport { Link } from 'react-router-dom'\r\nimport { showAverage } from '../../functions/rating'\r\nimport laptop from '../../images/laptop.png'\r\nimport _ from 'lodash'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nconst { Meta } = Card\r\n\r\nconst ProductCard = ({ product }) => {\r\n\r\n    const [tooltip, setTooltip] = useState(\"Click to add\")\r\n\r\n    const { user, cart } = useSelector((state) => ({ ...state }))\r\n    const dispatch = useDispatch()\r\n\r\n    const handleAddToCart = () => {\r\n        let cart = []\r\n        if (typeof window !== \"undefined\") {\r\n            if (localStorage.getItem(\"cart\")) {\r\n                cart = JSON.parse(localStorage.getItem(\"cart\"))\r\n            }\r\n\r\n            cart.push({\r\n                ...product,\r\n                count: 1\r\n            })\r\n\r\n            let unique = _.uniqWith(cart, _.isEqual)\r\n            localStorage.setItem(\"cart\", JSON.stringify(unique))\r\n            setTooltip(\"Added\")\r\n\r\n            dispatch({\r\n                type: \"ADD_TO_CART\",\r\n                payload: unique\r\n            })\r\n\r\n            dispatch({\r\n                type: \"SET_VISIBLE\",\r\n                payload: true\r\n            })\r\n        }\r\n    }\r\n\r\n    const { images, title, description, slug, price } = product\r\n\r\n    return (\r\n        <div>\r\n            {product && product.ratings && product.ratings.length > 0\r\n                ? (showAverage(product))\r\n                : (<div className=\"text-center pt-1 pb-3\">No rating yet</div>)\r\n            }\r\n            <Card\r\n                cover={\r\n                    <img\r\n                        src={images && images.length ? images[0].url : laptop}\r\n                        style={{ height: \"150px\", objectFit: \"cover\" }}\r\n                        className=\"p-1\"\r\n                    />\r\n                }\r\n                actions={[\r\n                    <Link to={`/product/${slug}`}>\r\n                        <EyeOutlined className=\"text-warning\" /> <br /> View Product\r\n                    </Link>,\r\n                    <Tooltip title={tooltip}>\r\n                        <a onClick={handleAddToCart} disabled={product.quantity < 1}>\r\n                            <ShoppingCartOutlined className=\"text-danger\" /> <br />\r\n                            {product.quantity < 1 ? \"Out of stock\" : \"Add to cart\"}\r\n                        </a>\r\n                    </Tooltip>\r\n                ]}\r\n            >\r\n\r\n                <Meta title={`${title} - $${price}`} description={`${description && description.substring(0, 40)}...`} />\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductCard","D:\\projects\\ecommerce\\client\\src\\components\\home\\BestSellers.js",["380"],"import React, { useEffect, useState } from 'react'\r\nimport { getProducts, getProductsCount } from '../../functions/product'\r\nimport ProductCard from '../cards/ProductCard'\r\nimport LoadingCard from '../cards/LoadingCard'\r\nimport { Pagination } from 'antd'\r\n\r\nconst BestSellers = () => {\r\n    const [products, setProducts] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n    const [productsCount, setProductsCount] = useState(0)\r\n    const [page, setPage] = useState(1)\r\n\r\n    useEffect(() => {\r\n        loadAllProducts()\r\n    }, [page])\r\n\r\n    useEffect(() => {\r\n        getProductsCount().then((res) => setProductsCount(res.data))\r\n    }, [])\r\n\r\n    const loadAllProducts = () => {\r\n        setLoading(true)\r\n        getProducts(\"createdAt\", \"desc\", page).then((res) => {\r\n            setProducts(res.data)\r\n            setLoading(false)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n                {loading ? (\r\n                    <LoadingCard count={3} />\r\n                ) : (\r\n                        <div className=\"row\">\r\n                            {products.map((product) => (\r\n                                <div className=\"col-md-4\">\r\n                                    <ProductCard product={product} />\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    )}\r\n            </div>\r\n            <div className=\"row\">\r\n                <nav className=\"col-md-4 offset-md-4 text-center pt-5 p-3\">\r\n                    <Pagination\r\n                        current={page}\r\n                        total={(productsCount / 3) * 10}\r\n                        onChange={(value) => setPage(value)}\r\n                    />\r\n                </nav>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BestSellers;\r\n","D:\\projects\\ecommerce\\client\\src\\components\\cards\\Jumbotron.js",[],"D:\\projects\\ecommerce\\client\\src\\components\\home\\NewArrivals.js",["381"],"import React, { useEffect, useState } from 'react'\r\nimport { getProducts, getProductsCount } from '../../functions/product'\r\nimport ProductCard from '../cards/ProductCard'\r\nimport LoadingCard from '../cards/LoadingCard'\r\nimport { Pagination } from 'antd'\r\n\r\nconst NewArrivals = () => {\r\n    const [products, setProducts] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n    const [productsCount, setProductsCount] = useState(0)\r\n    const [page, setPage] = useState(1)\r\n\r\n    useEffect(() => {\r\n        loadAllProducts()\r\n    }, [page])\r\n\r\n    useEffect(() => {\r\n        getProductsCount().then((res) => setProductsCount(res.data))\r\n    }, [])\r\n\r\n    const loadAllProducts = () => {\r\n        setLoading(true)\r\n        getProducts(\"createdAt\", \"desc\", page).then((res) => {\r\n            setProducts(res.data)\r\n            setLoading(false)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n                {loading ? (\r\n                    <LoadingCard count={3} />\r\n                ) : (\r\n                        <div className=\"row\">\r\n                            {products.map((product) => (\r\n                                <div className=\"col-md-4\">\r\n                                    <ProductCard product={product} />\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    )}\r\n            </div>\r\n            <div className=\"row\">\r\n                <nav className=\"col-md-4 offset-md-4 text-center pt-5 p-3\">\r\n                    <Pagination\r\n                        current={page}\r\n                        total={(productsCount / 3) * 10}\r\n                        onChange={(value) => setPage(value)}\r\n                    />\r\n                </nav>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NewArrivals;\r\n","D:\\projects\\ecommerce\\client\\src\\components\\cards\\SingleProduct.js",["382","383","384","385","386","387"],"import React, { useState } from 'react'\r\nimport { Card, Tabs, Tooltip } from 'antd'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { HeartOutlined, ShoppingCartOutlined } from '@ant-design/icons'\r\nimport 'react-responsive-carousel/lib/styles/carousel.min.css'\r\nimport { Carousel } from 'react-responsive-carousel'\r\nimport Laptop from '../../images/laptop.png'\r\nimport ProductListItems from './ProductListItem'\r\nimport StarRating from 'react-star-ratings'\r\nimport RatingModal from '../modal/RatingModal'\r\nimport { showAverage } from '../../functions/rating'\r\nimport _ from 'lodash'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { addToWishlist } from '../../functions/user'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst { TabPane } = Tabs\r\n\r\nconst SingleProduct = ({ product, onStarClick, star }) => {\r\n    const [tooltip, setTooltip] = useState(\"Click to add\")\r\n\r\n    const { user, cart } = useSelector((state) => ({ ...state }))\r\n    const dispatch = useDispatch()\r\n\r\n    let history = useHistory()\r\n\r\n    const handleAddToCart = () => {\r\n        let cart = []\r\n        if (typeof window !== \"undefined\") {\r\n            if (localStorage.getItem(\"cart\")) {\r\n                cart = JSON.parse(localStorage.getItem(\"cart\"))\r\n            }\r\n\r\n            cart.push({\r\n                ...product,\r\n                count: 1\r\n            })\r\n\r\n            let unique = _.uniqWith(cart, _.isEqual)\r\n            localStorage.setItem(\"cart\", JSON.stringify(unique))\r\n            setTooltip(\"Added\")\r\n\r\n            dispatch({\r\n                type: \"ADD_TO_CART\",\r\n                payload: unique\r\n            })\r\n\r\n            dispatch({\r\n                type: \"SET_VISIBLE\",\r\n                payload: true\r\n            })\r\n        }\r\n    }\r\n\r\n    const { title, images, description, _id } = product\r\n\r\n    const handleAddToWishlist = (e) => {\r\n        e.preventDefault()\r\n        addToWishlist(product._id, user.token).then((res) => {\r\n            toast.success(\"Added to wishlist\")\r\n            history.push('/user/wishlist')\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-7\">\r\n                    {images && images.length ? (\r\n                        <Carousel showArrows={true} autoPlay infiniteLoop>\r\n                            {images && images.map((i) => <img src={i.url} key={i.public_id} />)}\r\n                        </Carousel>\r\n                    ) : (\r\n                            <Card cover={<img src={Laptop} className=\"mb-3 card-image\" />}></Card>\r\n                        )}\r\n\r\n                    <Tabs type=\"card\">\r\n                        <TabPane tab=\"Description\" key=\"1\">\r\n                            {description && description}\r\n                        </TabPane>\r\n                        <TabPane tab=\"More\" key=\"2\">\r\n                            Call use on xxxx xxxx xxxx to learn more about this product\r\n                    </TabPane>\r\n                    </Tabs>\r\n                </div>\r\n                <div className=\"col-md-5\">\r\n                    <h1 className=\"bg-info p-3\">{title}</h1>\r\n                    {product && product.ratings && product.ratings.length > 0\r\n                        ? (showAverage(product))\r\n                        : (<div className=\"text-center pt-1 pb-3\">No rating yet</div>)\r\n                    }\r\n                    <Card\r\n                        actions={[\r\n                            <Tooltip title={tooltip}>\r\n                                <a onClick={handleAddToCart}>\r\n                                    <ShoppingCartOutlined className=\"text-danger\" /> <br /> Add to cart\r\n                                </a>\r\n                            </Tooltip>,\r\n                            <a onClick={handleAddToWishlist}>\r\n                                <HeartOutlined className=\"text-info\" /> <br /> Add to Wishlist\r\n                            </a>,\r\n                            <RatingModal>\r\n                                <StarRating\r\n                                    name={_id}\r\n                                    numberOfStars={5}\r\n                                    rating={star}\r\n                                    changeRating={onStarClick}\r\n                                    isSelectable={true}\r\n                                    starRatedColor=\"red\"\r\n                                />\r\n                            </RatingModal>\r\n                        ]}\r\n                    >\r\n                        <ProductListItems product={product} />\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SingleProduct","D:\\projects\\ecommerce\\client\\src\\components\\cards\\LoadingCard.js",["388"],"import { LoadingOutlined } from '@ant-design/icons'\r\nimport React from 'react'\r\nimport { Card, Skeleton } from 'antd'\r\n\r\nconst LoadingCard = ({ count }) => {\r\n    const cards = () => {\r\n        let totalCard = []\r\n        for (let i = 0; i < count; i++) {\r\n            totalCard.push(\r\n                <Card className=\"col-md-4\" key={i}>\r\n                    <Skeleton active></Skeleton>\r\n                </Card>\r\n            )\r\n        }\r\n    }\r\n    return <div className=\"row pb-3\">{cards()}</div>\r\n}\r\n\r\nexport default LoadingCard","D:\\projects\\ecommerce\\client\\src\\functions\\rating.js",[],"D:\\projects\\ecommerce\\client\\src\\components\\cards\\ProductListItem.js",[],"D:\\projects\\ecommerce\\client\\src\\components\\modal\\RatingModal.js",["389"],"import React, { useState } from 'react'\r\nimport { Modal, Button } from 'antd'\r\nimport { toast } from 'react-toastify'\r\nimport { useSelector } from 'react-redux'\r\nimport { StarOutlined } from '@ant-design/icons'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\n\r\nconst RatingModal = ({ children }) => {\r\n    const { user } = useSelector((state) => ({ ...state }))\r\n    const [modalVisible, setModalVisible] = useState(false)\r\n    const history = useHistory()\r\n    const { slug } = useParams()\r\n\r\n    const handleModal = () => {\r\n        if (user && user.token) {\r\n            setModalVisible(true)\r\n        } else {\r\n            history.push({\r\n                pathname: \"/login\",\r\n                state: { from: `/product/${slug}` }\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div onClick={handleModal}>\r\n                <StarOutlined className=\"text-danger\" /> <br /> {\" \"}\r\n                {user ? \"Leave Rating\" : \"Login to Leave Rating\"}\r\n            </div>\r\n            <Modal\r\n                title=\"Leave your rating\"\r\n                centered\r\n                visible={modalVisible}\r\n                onOk={() => {\r\n                    setModalVisible(false)\r\n                    toast.success(\"Thanks for your review.It will apper soon\")\r\n                }}\r\n                onCancel={() => setModalVisible(false)}\r\n            >\r\n                {children}\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RatingModal","D:\\projects\\ecommerce\\client\\src\\pages\\Shop.js",["390","391","392","393","394","395"],"import React, { useState, useEffect } from 'react'\r\nimport { fetchProductsByFilter, getProductByCount } from '../functions/product'\r\nimport { getCategories } from '../functions/category'\r\nimport { getSubs } from '../functions/sub'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport ProductCard from '../components/cards/ProductCard'\r\nimport { Menu, Slider, Checkbox, Radio } from 'antd'\r\nimport { DollarOutlined, DownSquareOutlined, StarOutlined, TagOutlined } from '@ant-design/icons'\r\nimport Star from '../components/forms/Star'\r\n\r\nconst { SubMenu, ItemGroup } = Menu\r\n\r\nconst Shop = () => {\r\n    const [products, setProducts] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n    const [price, setPrice] = useState([0, 0])\r\n    const [ok, setOk] = useState(false)\r\n    const [categories, setCategories] = useState([])\r\n    const [categoryIds, setCategoryIds] = useState([])\r\n    const [star, setStar] = useState('')\r\n    const [subs, setSubs] = useState([])\r\n    const [sub, setSub] = useState('')\r\n    const [brands, setBrands] = useState([\r\n        \"Apple\",\r\n        \"Samsung\",\r\n        \"Microsoft\",\r\n        \"Lenovo\",\r\n        \"ASUS\"\r\n    ])\r\n    const [brand, setBrand] = useState('')\r\n    const [colors, setColors] = useState([\r\n        \"Black\",\r\n        \"Brown\",\r\n        \"Silver\",\r\n        \"White\",\r\n        \"Blue\"\r\n    ])\r\n    const [color, setColor] = useState('')\r\n    const [shipping, setShipping] = useState(\"\")\r\n\r\n    let dispatch = useDispatch()\r\n    let { search } = useSelector((state) => ({ ...state }))\r\n    const { text } = search\r\n\r\n    useEffect(() => {\r\n        loadAllProducts()\r\n        getCategories().then((res) => setCategories(res.data))\r\n        getSubs().then((res) => setSubs(res.data))\r\n    }, [])\r\n\r\n    const loadAllProducts = () => {\r\n        getProductByCount(12).then((p) => {\r\n            setProducts(p.data)\r\n            setLoading(false)\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        const delayed = setTimeout(() => {\r\n            fetchProducts({ query: text })\r\n            if (!text) {\r\n                loadAllProducts()\r\n            }\r\n        }, 300)\r\n        return () => clearTimeout(delayed)\r\n    }, [text])\r\n\r\n    const fetchProducts = (arg) => {\r\n        fetchProductsByFilter(arg).then((res) => {\r\n            setProducts(res.data)\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchProducts({ price })\r\n    }, [ok])\r\n\r\n    const handleSlider = (value) => {\r\n        dispatch({\r\n            type: \"SEARCH_QUERY\",\r\n            payload: { text: \"\" }\r\n        })\r\n        setCategoryIds([])\r\n        setPrice(value)\r\n        setStar(\"\")\r\n        setSub('')\r\n        setBrand(\"\")\r\n        setColor(\"\")\r\n        setShipping(\"\")\r\n        setTimeout(() => {\r\n            setOk(!ok)\r\n        }, 300)\r\n    }\r\n\r\n    const showCategories = () =>\r\n        categories.map((c) => (\r\n            <div key={c._id}>\r\n                <Checkbox\r\n                    onChange={handleCheck}\r\n                    className=\"pb-2 pl-4 pr-4\"\r\n                    value={c._id}\r\n                    name=\"category\"\r\n                    checked={categoryIds.includes(c._id)}\r\n                >\r\n                    {c.name}\r\n                </Checkbox>\r\n            </div>\r\n        ))\r\n\r\n\r\n    const handleCheck = (e) => {\r\n        dispatch({\r\n            type: \"SEARCH_QUERY\",\r\n            payload: { text: \"\" }\r\n        })\r\n        setPrice([0, 0])\r\n        setStar(\"\")\r\n        setSub('')\r\n        setBrand(\"\")\r\n        setColor(\"\")\r\n        setShipping(\"\")\r\n\r\n        let inTheState = [...categoryIds]\r\n        let justChecked = e.target.value\r\n        let foundInTheState = inTheState.indexOf(justChecked)\r\n\r\n        if (foundInTheState === -1) {\r\n            inTheState.push(justChecked)\r\n        } else {\r\n            inTheState.splice(foundInTheState, 1)\r\n        }\r\n\r\n        setCategoryIds(inTheState)\r\n        fetchProducts({ category: inTheState })\r\n    }\r\n\r\n    const handleStarClick = (num) => {\r\n        dispatch({\r\n            type: \"SEARCH_QUERY\",\r\n            payload: { text: \"\" }\r\n        })\r\n        setPrice([0, 0])\r\n        setCategoryIds([])\r\n        setStar(num)\r\n        setSub('')\r\n        setBrand(\"\")\r\n        setColor(\"\")\r\n        setShipping(\"\")\r\n        fetchProducts({ stars: num })\r\n    }\r\n\r\n    const showStars = () => (\r\n        <div className=\"pr-4 pl-4 pb-2\">\r\n            <Star starClick={handleStarClick} numberOfStars={5} />\r\n            <Star starClick={handleStarClick} numberOfStars={4} />\r\n            <Star starClick={handleStarClick} numberOfStars={3} />\r\n            <Star starClick={handleStarClick} numberOfStars={2} />\r\n            <Star starClick={handleStarClick} numberOfStars={1} />\r\n        </div>\r\n    )\r\n\r\n    const showSubs = () =>\r\n        subs.map((s) => (\r\n            <div\r\n                key={s._id}\r\n                onClick={() => handleSub(s)}\r\n                className=\"p-1 m-1 badge badge-secondary\"\r\n                style={{ cursor: \"pointer\" }}\r\n            >\r\n                {s.name}\r\n            </div>\r\n        ))\r\n\r\n    const handleSub = (sub) => {\r\n        setSub(sub)\r\n        dispatch({\r\n            type: \"SEARCH_QUERY\",\r\n            payload: { text: \"\" }\r\n        })\r\n        setPrice([0, 0])\r\n        setCategoryIds([])\r\n        setStar(\"\")\r\n        setBrand(\"\")\r\n        setColor(\"\")\r\n        setShipping(\"\")\r\n        fetchProducts({ sub })\r\n    }\r\n\r\n    const showBrands = () =>\r\n        brands.map((b) => (\r\n            <Radio\r\n                value={b}\r\n                name={b}\r\n                checked={b === brand}\r\n                onChange={handleBrand}\r\n                className=\"pb-1 pl-4 pr-4\"\r\n            >\r\n                {b}\r\n            </Radio>\r\n        ))\r\n\r\n\r\n    const handleBrand = (e) => {\r\n        setSub(\"\")\r\n        dispatch({\r\n            type: \"SEARCH_QUERY\",\r\n            payload: { text: \"\" }\r\n        })\r\n        setPrice([0, 0])\r\n        setCategoryIds([])\r\n        setStar(\"\")\r\n        setColor(\"\")\r\n        setShipping(\"\")\r\n        setBrand(e.target.value)\r\n        fetchProducts({ brand: e.target.value })\r\n    }\r\n\r\n    const showColors = () =>\r\n        colors.map((c) => (\r\n            <Radio\r\n                value={c}\r\n                name={c}\r\n                checked={c === color}\r\n                onChange={handleColor}\r\n                className=\"pb-1 pl-4 pr-4\"\r\n            >\r\n                {c}\r\n            </Radio>\r\n        ))\r\n\r\n    const handleColor = (e) => {\r\n        setSub(\"\")\r\n        dispatch({\r\n            type: \"SEARCH_QUERY\",\r\n            payload: { text: \"\" }\r\n        })\r\n        setPrice([0, 0])\r\n        setCategoryIds([])\r\n        setStar(\"\")\r\n        setBrand(\"\")\r\n        setShipping(\"\")\r\n        setColor(e.target.value)\r\n        fetchProducts({ color: e.target.value })\r\n    }\r\n\r\n    const showShipping = () => (\r\n        <div>\r\n            <Checkbox\r\n                className=\"pb-2 pl-4 pr-4\"\r\n                onChange={handleShippingChange}\r\n                value=\"Yes\"\r\n                checked={shipping === \"Yes\"}\r\n            >\r\n                Yes\r\n            </Checkbox>\r\n\r\n            <Checkbox\r\n                className=\"pb-2 pl-4 pr-4\"\r\n                onChange={handleShippingChange}\r\n                value=\"No\"\r\n                checked={shipping === \"No\"}\r\n            >\r\n                No\r\n            </Checkbox>\r\n        </div>\r\n    )\r\n\r\n    const handleShippingChange = (e) => {\r\n        setSub(\"\")\r\n        dispatch({\r\n            type: \"SEARCH_QUERY\",\r\n            payload: { text: \"\" }\r\n        })\r\n        setPrice([0, 0])\r\n        setCategoryIds([])\r\n        setStar(\"\")\r\n        setBrand(\"\")\r\n        setColor(\"\")\r\n        setShipping(e.target.value)\r\n        fetchProducts({ shipping: e.target.value })\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-3 pt-2\">\r\n                    <h4>Search/Filter</h4>\r\n                    <hr />\r\n\r\n                    <Menu defaultOpenKeys={[\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\"]} mode=\"inline\">\r\n                        <SubMenu key=\"1\" title={\r\n                            <span className=\"h6\">\r\n                                <DollarOutlined />Price\r\n                            </span>\r\n                        }>\r\n                            <div>\r\n                                <Slider\r\n                                    className=\"ml-4 mr-4\"\r\n                                    tipFormatter={(v) => `$${v}`}\r\n                                    range\r\n                                    value={price}\r\n                                    onChange={handleSlider}\r\n                                    max=\"44999\"\r\n                                />\r\n                            </div>\r\n                        </SubMenu>\r\n\r\n                        <SubMenu key=\"2\" title={\r\n                            <span className=\"h6\">\r\n                                <DownSquareOutlined />Categories\r\n                            </span>\r\n                        }>\r\n                            <div style={{ marginTop: \"-10px\" }}>\r\n                                {showCategories()}\r\n                            </div>\r\n                        </SubMenu>\r\n\r\n                        <SubMenu key=\"3\" title={\r\n                            <span className=\"h6\">\r\n                                <StarOutlined />Rating\r\n                            </span>\r\n                        }>\r\n                            <div style={{ marginTop: \"-10px\" }}>\r\n                                {showStars()}\r\n                            </div>\r\n                        </SubMenu>\r\n\r\n                        <SubMenu key=\"4\" title={\r\n                            <span className=\"h6\">\r\n                                <TagOutlined />Sub Categories\r\n                            </span>\r\n                        }>\r\n                            <div style={{ marginTop: \"-10px\" }} className=\"pl-4 pr-4\">\r\n                                {showSubs()}\r\n                            </div>\r\n                        </SubMenu>\r\n\r\n                        <SubMenu key=\"5\" title={\r\n                            <span className=\"h6\">\r\n                                <TagOutlined />Brands\r\n                            </span>\r\n                        }>\r\n                            <div style={{ marginTop: \"-10px\" }} className=\"pr-5\">\r\n                                {showBrands()}\r\n                            </div>\r\n                        </SubMenu>\r\n\r\n                        <SubMenu key=\"6\" title={\r\n                            <span className=\"h6\">\r\n                                <TagOutlined />Colors\r\n                            </span>\r\n                        }>\r\n                            <div style={{ marginTop: \"-10px\" }} className=\"pr-5\">\r\n                                {showColors()}\r\n                            </div>\r\n                        </SubMenu>\r\n\r\n                        <SubMenu key=\"7\" title={\r\n                            <span className=\"h6\">\r\n                                <TagOutlined />Shipping\r\n                            </span>\r\n                        }>\r\n                            <div style={{ marginTop: \"-10px\" }} className=\"pr-5\">\r\n                                {showShipping()}\r\n                            </div>\r\n                        </SubMenu>\r\n                    </Menu>\r\n                </div>\r\n                <div className=\"col-md-9 pt-2\">\r\n                    {loading ? (\r\n                        <h4 className=\"text-danger\">Loading...</h4>\r\n                    ) : (\r\n                            <h4 className=\"text-danger\">Products</h4>\r\n                        )}\r\n\r\n                    {products.length < 1 && <p>No products found</p>}\r\n\r\n                    <div className=\"row pb-5\">\r\n                        {products.map((p) => (\r\n                            <div key={p._id} className=\"col-md-4 mt-3\">\r\n                                <ProductCard product={p} />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Shop","D:\\projects\\ecommerce\\client\\src\\pages\\sub\\SubHome.js",["396"],"import React, {useState, useEffect} from 'react'\r\nimport { getSub } from '../../functions/sub'\r\nimport ProductCard from '../../components/cards/ProductCard'\r\n\r\nconst SubHome = ({match}) => {\r\n    const [sub, setSub] = useState({})\r\n    const [products, setProducts] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const {slug} = match.params\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        getSub(slug).then((res) => {\r\n            setSub(res.data.sub)\r\n            setProducts(res.data.products)\r\n            setLoading(false)\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    {loading ? (\r\n                        <h4 className=\"text-center p-3 mt-5 display-4 jumbotron\">\r\n                            Loading...\r\n                        </h4>\r\n                    ):(\r\n                        <h4 className=\"text-center p-3 mt-5 display-4 jumbotron\">\r\n                            {products.length} Products in \"{sub.name}\" sub category\r\n                        </h4>\r\n                    )}\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                {products.map((p) => (\r\n                    <div className=\"col\" key={p._id}>\r\n                        <ProductCard product={p} />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SubHome","D:\\projects\\ecommerce\\client\\src\\pages\\category\\CategoryHome.js",["397","398","399"],"import React, {useState, useEffect} from 'react'\r\nimport { getCategory } from '../../functions/category'\r\nimport { Link } from 'react-router-dom'\r\nimport ProductCard from '../../components/cards/ProductCard'\r\nimport CategoryList from '../../components/category/CategoryList'\r\n\r\nconst CategoryHome = ({match}) => {\r\n    const [category, setCategory] = useState({})\r\n    const [products, setProducts] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const {slug} = match.params\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        getCategory(slug).then((res) => {\r\n            setCategory(res.data.category)\r\n            setProducts(res.data.products)\r\n            setLoading(false)\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    {loading ? (\r\n                        <h4 className=\"text-center p-3 mt-5 display-4 jumbotron\">\r\n                            Loading...\r\n                        </h4>\r\n                    ):(\r\n                        <h4 className=\"text-center p-3 mt-5 display-4 jumbotron\">\r\n                            {products.length} Products in \"{category.name}\" category\r\n                        </h4>\r\n                    )}\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                {products.map((p) => (\r\n                    <div className=\"col\" key={p._id}>\r\n                        <ProductCard product={p} />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CategoryHome","D:\\projects\\ecommerce\\client\\src\\reducers\\searchReducer.js",[],"D:\\projects\\ecommerce\\client\\src\\components\\forms\\Star.js",[],"D:\\projects\\ecommerce\\client\\src\\components\\category\\CategoryList.js",[],"D:\\projects\\ecommerce\\client\\src\\components\\sub\\SubList.js",[],"D:\\projects\\ecommerce\\client\\src\\components\\forms\\Search.js",[],"D:\\projects\\ecommerce\\client\\src\\components\\drawer\\SideDrawer.js",["400","401","402"],"import React from 'react'\r\nimport { Drawer, Button } from 'antd'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport laptop from '../../images/laptop.png'\r\n\r\nconst SideDrawer = ({ children }) => {\r\n    const dispatch = useDispatch()\r\n    const { drawer, cart } = useSelector((state) => ({ ...state }))\r\n\r\n    const imageStyle = {\r\n        width: '100%',\r\n        height: '50px',\r\n        objectFit: 'cover'\r\n    }\r\n\r\n    return (\r\n        <Drawer\r\n            className=\"text-center\"\r\n            title={`Cart / ${cart.length} Product`}\r\n            placement=\"right\"\r\n            closable={false}\r\n            onClose={() => {\r\n                dispatch({\r\n                    type: \"SET_VISIBLE\",\r\n                    payload: false\r\n                })\r\n            }}\r\n            visible={drawer}\r\n        >\r\n            {cart.map((p) => (\r\n                <div key={p._id} className=\"row\">\r\n                    <div className=\"col\">\r\n                        {p.images[0] ? (\r\n                            <div>\r\n                                <img src={p.images[0].url} style={imageStyle} />\r\n                                <p className=\"text-center bg-secondary text-light\">\r\n                                    {p.title} x {p.count}\r\n                                </p>\r\n                            </div>\r\n                        ) : (\r\n                                <div>\r\n                                    <img src={laptop} style={imageStyle} />\r\n                                    <p className=\"text-center bg-secondary text-light\">\r\n                                        {p.title} x {p.count}\r\n                                    </p>\r\n                                </div>\r\n                            )}\r\n                    </div>\r\n                </div>\r\n            ))}\r\n\r\n            <Link to=\"/cart\">\r\n                <button\r\n                    onClick={() =>\r\n                        dispatch({\r\n                            type: \"SET_VISIBLE\",\r\n                            payload: false\r\n                        })\r\n                    }\r\n                    className=\"text-center btn btn-primary btn-raised btn-block\">\r\n                    Go To Cart\r\n                </button>\r\n            </Link>\r\n        </Drawer>\r\n    )\r\n}\r\n\r\nexport default SideDrawer","D:\\projects\\ecommerce\\client\\src\\reducers\\drawerReducer.js",[],"D:\\projects\\ecommerce\\client\\src\\reducers\\cartReducer.js",[],"D:\\projects\\ecommerce\\client\\src\\pages\\Cart.js",[],"D:\\projects\\ecommerce\\client\\src\\components\\cards\\ProductCardInCheckout.js",["403","404","405","406","407"],"import React from 'react'\r\nimport ModalImage from 'react-modal-image'\r\nimport laptop from '../../images/laptop.png'\r\nimport { useDispatch } from 'react-redux'\r\nimport { toast } from 'react-toastify'\r\nimport { CheckCircleOutlined, CloseCircleOutlined, CloseOutlined } from '@ant-design/icons'\r\n\r\nconst ProductCardInCheckout = ({ p }) => {\r\n    const colors = [\"Black\", \"Brown\", \"Silver\", \"White\", \"Blue\"]\r\n    let dispatch = useDispatch()\r\n\r\n    const handleColorChange = (e) => {\r\n        let cart = []\r\n        if (typeof window !== \"undefined\") {\r\n            if (localStorage.getItem(\"cart\")) {\r\n                cart = JSON.parse(localStorage.getItem(\"cart\"))\r\n            }\r\n\r\n            cart.map((product, i) => {\r\n                if (product._id === p._id) {\r\n                    cart[i].color = e.target.value\r\n                }\r\n            })\r\n\r\n            localStorage.setItem(\"cart\", JSON.stringify(cart))\r\n            dispatch({\r\n                type: \"ADD_TO_CART\",\r\n                payload: cart\r\n            })\r\n        }\r\n    }\r\n\r\n    const handleQuantityChange = (e) => {\r\n        let count = e.target.value < 1 ? 1 : e.target.value\r\n        if (count > p.quantity) {\r\n            toast.error(`Max available quantity: ${p.quantity}`)\r\n            return\r\n        }\r\n\r\n        let cart = []\r\n\r\n        if (typeof window !== \"undefined\") {\r\n            if (localStorage.getItem(\"cart\")) {\r\n                cart = JSON.parse(localStorage.getItem(\"cart\"))\r\n            }\r\n\r\n            cart.map((product, i) => {\r\n                if (product._id == p._id) {\r\n                    cart[i].count = count\r\n                }\r\n            })\r\n\r\n            localStorage.setItem(\"cart\", JSON.stringify(cart))\r\n            dispatch({\r\n                type: \"ADD_TO_CART\",\r\n                payload: cart\r\n            })\r\n        }\r\n    }\r\n\r\n    const handleRemove = () => {\r\n        let cart = []\r\n\r\n        if (typeof window !== \"undefined\") {\r\n            if (localStorage.getItem(\"cart\")) {\r\n                cart = JSON.parse(localStorage.getItem(\"cart\"))\r\n            }\r\n\r\n            cart.map((product, i) => {\r\n                if (product._id == p._id) {\r\n                    cart.splice(i, 1)\r\n                }\r\n            })\r\n\r\n            localStorage.setItem(\"cart\", JSON.stringify(cart))\r\n            dispatch({\r\n                type: \"ADD_TO_CART\",\r\n                payload: cart\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <tbody>\r\n            <tr>\r\n                <td>\r\n                    <div style={{ width: \"100px\", height: \"auto\" }}>\r\n                        {p.images.length ? (\r\n                            <ModalImage small={p.images[0].url} large={p.images[0].url} />\r\n                        ) : (\r\n                                <ModalImage small={laptop} large={laptop} />\r\n                            )}\r\n                    </div>\r\n                </td>\r\n                <td>{p.title}</td>\r\n                <td>{p.price}</td>\r\n                <td>{p.brand}</td>\r\n                <td>\r\n                    <select\r\n                        onChange={handleColorChange}\r\n                        name=\"color\"\r\n                        className=\"form-control\"\r\n                    >\r\n                        {p.color ? (<option>{p.color}</option>) : (<option>Select</option>)}\r\n                        {colors.filter((c) => c !== p.color).map((c) => (\r\n                            <option key={c} value={c}>\r\n                                {c}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </td>\r\n                <td className=\"text-center\">\r\n                    <input\r\n                        type=\"number\"\r\n                        className=\"form-control\"\r\n                        value={p.count}\r\n                        onChange={handleQuantityChange}\r\n                    />\r\n                </td>\r\n                <td className=\"text-center\">\r\n                    {p.shipping === \"Yes\" ? (\r\n                        <CheckCircleOutlined className=\"text-success\" />\r\n                    ) : (\r\n                            <CloseCircleOutlined className=\"text-danger\" />\r\n                        )}\r\n                </td>\r\n                <td className=\"text-center\">\r\n                    <CloseOutlined\r\n                        onClick={handleRemove}\r\n                        className=\"text-danger pointer\"\r\n                    />\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    )\r\n}\r\n\r\nexport default ProductCardInCheckout","D:\\projects\\ecommerce\\client\\src\\pages\\Checkout.js",["408"],"import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getUserCart, emptyUserCart, saveUserAddress, applyCoupon, createCashOrderForUser } from '../functions/user'\r\nimport { toast } from 'react-toastify'\r\nimport ReactQuill from 'react-quill'\r\nimport 'react-quill/dist/quill.snow.css'\r\n\r\nconst Checkout = ({ history }) => {\r\n    const [products, setProducts] = useState([])\r\n    const [total, setTotal] = useState(0)\r\n    const [address, setAddress] = useState(\"\")\r\n    const [addressSaved, setAddressSaved] = useState(false)\r\n    const [coupon, setCoupon] = useState(\"\")\r\n    const [totalAfterDiscount, setTotalAfterDiscount] = useState(0)\r\n    const [discountError, setDiscountError] = useState(\"\")\r\n\r\n    const dispatch = useDispatch()\r\n    const { user, COD } = useSelector((state) => ({ ...state }))\r\n    const couponTrueOrFalse = useSelector((state) => ({ ...state }))\r\n\r\n    useEffect(() => {\r\n        getUserCart(user.token).then((res) => {\r\n            setProducts(res.data.products)\r\n            setTotal(res.data.cartTotal)\r\n        })\r\n    }, [])\r\n\r\n    const emptyCart = () => {\r\n        if (typeof window !== \"undefined\") {\r\n            localStorage.removeItem(\"cart\")\r\n        }\r\n\r\n        dispatch({\r\n            type: \"ADD_TO_CART\",\r\n            payload: []\r\n        })\r\n\r\n        emptyUserCart(user.token).then((res) => {\r\n            setProducts([])\r\n            setTotal(0)\r\n            setTotalAfterDiscount(0)\r\n            setCoupon(\"\")\r\n            toast.success(\"Cart is empty. Continue shopping\")\r\n        })\r\n    }\r\n\r\n    const saveAddressToDb = () => {\r\n        saveUserAddress(user.token, address).then((res) => {\r\n            if (res.data.ok) {\r\n                setAddressSaved(true)\r\n                toast.success(\"Address Saved\")\r\n            }\r\n        })\r\n    }\r\n\r\n    const applyDiscountCoupon = () => {\r\n        applyCoupon(user.token, coupon).then((res) => {\r\n            if (res.data) {\r\n                setTotalAfterDiscount(res.data)\r\n                dispatch({\r\n                    type: \"COUPON_APPLIED\",\r\n                    payload: true\r\n                })\r\n            }\r\n\r\n            if (res.data.err) {\r\n                setDiscountError(res.data.err)\r\n                dispatch({\r\n                    type: \"COUPON_APPLIED\",\r\n                    payload: false\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    const showAddress = () => (\r\n        <div>\r\n            <ReactQuill theme=\"snow\" value={address} onChange={setAddress} />\r\n            <button className=\"btn btn-primary mt-2\" onClick={saveAddressToDb}>\r\n                Save\r\n            </button>\r\n        </div>\r\n    )\r\n\r\n    const showProductSummary = () => {\r\n        products.map((p, i) => (\r\n            <div key={i}>\r\n                <p>\r\n                    {p.product.title} ({p.color}) x {p.count}={\" \"}\r\n                    {p.product.price * p.count}\r\n                </p>\r\n            </div>\r\n        ))\r\n    }\r\n\r\n    const showApplyCoupon = () => (\r\n        <div>\r\n            <input\r\n                onChange={(e) => {\r\n                    setCoupon(e.target.value)\r\n                    setDiscountError(\"\")\r\n                }}\r\n                value={coupon}\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n            />\r\n            <button onClick={applyDiscountCoupon} className=\"btn btn-primary mt-2\">Apply</button>\r\n        </div>\r\n    )\r\n\r\n    const createCashOrder = () => {\r\n        createCashOrderForUser(user.token, COD, couponTrueOrFalse).then((res) => {\r\n            if (res.data.ok) {\r\n                if (typeof window !== \"undefined\") localStorage.removeItem(\"cart\")\r\n\r\n                dispatch({\r\n                    type: \"ADD_TO_CART\",\r\n                    payload: []\r\n                })\r\n\r\n                dispatch({\r\n                    type: \"COUPON_APPLIED\",\r\n                    payload: false\r\n                })\r\n\r\n                dispatch({\r\n                    type: \"COD\",\r\n                    payload: false\r\n                })\r\n\r\n                emptyUserCart(user.token)\r\n                setTimeout(() => {\r\n                    history.push(\"/user/history\")\r\n                }, 1000)\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n                <h4>Delivery Address</h4>\r\n                <br />\r\n                <br />\r\n                {showAddress()}\r\n                <hr />\r\n                <h4>Got Coupon?</h4>\r\n                <br />\r\n                {showApplyCoupon()}\r\n                <br />\r\n                {discountError && <p className=\"bg-danger p-2\">{discountError}</p>}\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n                <h4>Order Summary</h4>\r\n                <hr />\r\n                <p>Products {products.length}</p>\r\n                <hr />\r\n                {showProductSummary()}\r\n                <hr />\r\n                <p>Cart Total: {total}</p>\r\n                {totalAfterDiscount > 0 && (\r\n                    <p className=\"bg-success p-2\">\r\n                        Discount Applied: Total Payable: ${totalAfterDiscount}\r\n                    </p>\r\n                )}\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                        {COD ? (\r\n                            <button\r\n                                className=\"btn btn-primary\"\r\n                                disabled={!addressSaved || !products.length}\r\n                                onClick={createCashOrder}\r\n                            >\r\n                                Place Order\r\n                            </button>\r\n                        ) : (\r\n                                <button\r\n                                    className=\"btn btn-primary\"\r\n                                    disabled={!addressSaved || !products.length}\r\n                                    onClick={() => history.push('/payment')}\r\n                                >\r\n                                    Place Order\r\n                                </button>\r\n                            )}\r\n                    </div>\r\n\r\n                    <div className=\"col-md-6\">\r\n                        <button onClick={emptyCart} disabled={!products.length} className=\"btn btn-primary\">Empty Cart</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Checkout","D:\\projects\\ecommerce\\client\\src\\functions\\user.js",[],"D:\\projects\\ecommerce\\client\\src\\pages\\Payment.js",[],"D:\\projects\\ecommerce\\client\\src\\reducers\\couponReducer.js",[],"D:\\projects\\ecommerce\\client\\src\\components\\cards\\ShowPaymentInfo.js",[],"D:\\projects\\ecommerce\\client\\src\\components\\StripeCheckout.js",["409","410"],"import React, { useEffect, useState } from 'react'\r\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { createPaymentIntent } from '../functions/stripe'\r\nimport { Link } from 'react-router-dom'\r\nimport { Card } from 'antd'\r\nimport { DollarOutlined, CheckOutlined } from '@ant-design/icons'\r\nimport Laptop from '../images/laptop.png'\r\nimport { createOrder, emptyUserCart } from '../functions/user'\r\n\r\nconst StripeCheckout = ({ history }) => {\r\n    const dispatch = useDispatch()\r\n    const { user, coupon } = useSelector((state) => ({ ...state }))\r\n\r\n    const [succeeded, setSucceeded] = useState(false)\r\n    const [error, setError] = useState(null)\r\n    const [processing, setProcessing] = useState(\"\")\r\n    const [disabled, setDisabled] = useState(true)\r\n    const [clientSecret, setClientSecret] = useState(\"\")\r\n    const [cartTotal, setCartTotal] = useState(0)\r\n    const [totalAfterDiscount, setTotalAfterDiscount] = useState(0)\r\n    const [payable, setPayable] = useState(0)\r\n\r\n    const stripe = useStripe()\r\n    const elements = useElements()\r\n\r\n    useEffect(() => {\r\n        createPaymentIntent(user.token, coupon).then((res) => {\r\n            setClientSecret(res.data.clientSecret)\r\n            setCartTotal(res.data.cartTotal)\r\n            setTotalAfterDiscount(res.data.totalAfterDiscount)\r\n            setPayable(res.data.payable)\r\n        })\r\n    }, [])\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        setProcessing(true)\r\n\r\n        const payload = await stripe.confirmCardPayment(clientSecret, {\r\n            payment_method: {\r\n                card: elements.getElement(CardElement),\r\n                billing_details: {\r\n                    name: e.target.name.value\r\n                }\r\n            }\r\n        })\r\n\r\n        if (payload.error) {\r\n            setError(`Payment failed ${payload.error.message}`)\r\n            setProcessing(false)\r\n        } else {\r\n            createOrder(payload, user.token).then((res) => {\r\n                if (res.data.ok) {\r\n                    if (typeof window !== \"undefined\") localStorage.removeItem(\"cart\")\r\n\r\n                    dispatch({\r\n                        type: \"ADD_TO_CART\",\r\n                        payload: []\r\n                    })\r\n\r\n                    dispatch({\r\n                        type: \"COUPON_FAILED\",\r\n                        payload: false\r\n                    })\r\n                    emptyUserCart(user.token)\r\n                }\r\n            })\r\n\r\n            setError(null)\r\n            setProcessing(false)\r\n            setSucceeded(true)\r\n        }\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        setDisabled(e.empty)\r\n        setError(e.error ? e.error.message : \"\")\r\n    }\r\n\r\n    const cartStyle = {\r\n        style: {\r\n            base: {\r\n                color: \"#32325d\",\r\n                fontFamily: \"Arial, sans-serif\",\r\n                fontSmoothing: \"antialiased\",\r\n                fontSize: \"16px\",\r\n                \"::placeholder\": {\r\n                    color: \"#32325d\"\r\n                }\r\n            },\r\n            invalid: {\r\n                color: \"#fa755a\",\r\n                iconColor: \"#fa755a\"\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!succeeded && (\r\n                <div>\r\n                    {coupon && totalAfterDiscount !== undefined ? (\r\n                        <p className=\"alert alert-success\">{`Total after discount: $${totalAfterDiscount}`}</p>\r\n                    ) : (\r\n                            <p className=\"alert alert-danger\">No coupon applied</p>\r\n                        )}\r\n                </div>\r\n            )}\r\n            <div className=\"text-center pb-5\">\r\n                <Card\r\n                    cover={\r\n                        <img\r\n                            src={Laptop}\r\n                            style={{\r\n                                height: \"200px\",\r\n                                objectFit: \"cover\",\r\n                                marginBottom: \"-50px\"\r\n                            }}\r\n                        />\r\n                    }\r\n                    actions={[\r\n                        <div>\r\n                            <DollarOutlined className=\"text-info\" /><br />Total: ${cartTotal}\r\n                        </div>,\r\n                        <div>\r\n                            <CheckOutlined className=\"text-info\" /><br />Total payable: ${(payable / 100).toFixed(2)}\r\n                        </div>\r\n                    ]}\r\n                />\r\n            </div>\r\n\r\n            <form id=\"payment-form\" className=\"stripe-form\" onSubmit={handleSubmit}>\r\n                <CardElement\r\n                    id=\"card-element\"\r\n                    options={cartStyle}\r\n                    onChange={handleChange}\r\n                />\r\n                <button className=\"stripe-button\" disabled={processing || disabled || succeeded}>\r\n                    <span id=\"button-text\">\r\n                        {processing ? <div className=\"spinner\" id=\"spinner\"></div> : \"Pay\"}\r\n                    </span>\r\n                </button>\r\n                <br />\r\n                {error && (\r\n                    <div className=\"card-error\" role=\"alert\">\r\n                        {error}\r\n                    </div>\r\n                )}\r\n                <br />\r\n                <p className={succeeded ? \"result-message\" : \"result-message hidden\"}>\r\n                    Payment Successful.\r\n                    <Link to=\"/user/history\">See it in your purchase history</Link>\r\n                </p>\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default StripeCheckout","D:\\projects\\ecommerce\\client\\src\\functions\\stripe.js",[],"D:\\projects\\ecommerce\\client\\src\\pages\\admin\\coupon\\CreateCouponPage.js",["411"],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { toast } from 'react-toastify'\r\nimport { getCoupons, removeCoupon, createCoupon } from '../../../functions/coupon'\r\nimport DatePicker from 'react-datepicker'\r\nimport \"react-datepicker/dist/react-datepicker.css\"\r\nimport { DeleteOutlined } from '@ant-design/icons'\r\nimport AdminNav from '../../../components/nav/AdminNav'\r\n\r\nconst CreateCouponPage = () => {\r\n    const [name, setName] = useState(\"\")\r\n    const [expiry, setExpiry] = useState(\"\")\r\n    const [discount, setDiscount] = useState(\"\")\r\n    const [loading, setLoading] = useState(false)\r\n    const [coupons, setCoupons] = useState([])\r\n\r\n    const { user } = useSelector((state) => ({ ...state }))\r\n\r\n    useEffect(() => {\r\n        loadAllCoupons()\r\n    }, [])\r\n\r\n    const loadAllCoupons = () => getCoupons().then((res) => setCoupons(res.data))\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        setLoading(true)\r\n        createCoupon({ name, expiry, discount }, user.token)\r\n            .then((res) => {\r\n                setLoading(false)\r\n                loadAllCoupons()\r\n                setName(\"\")\r\n                setDiscount(\"\")\r\n                setExpiry(\"\")\r\n                toast.success(`\"${res.data.name}\" is created`)\r\n            })\r\n            .catch((err) => console.log(\"create coupon err\", err))\r\n    }\r\n\r\n    const handleRemove = (couponId) => {\r\n        if (window.confirm(\"Delete?\")) {\r\n            setLoading(true)\r\n            removeCoupon(couponId, user.token)\r\n                .then((res) => {\r\n                    loadAllCoupons()\r\n                    setLoading(false)\r\n                    toast.error(`Coupon \"${res.data.name}\" deleted`)\r\n                })\r\n                .catch((err) => console.log(err))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-2\">\r\n                    <AdminNav />\r\n                </div>\r\n                <div className=\"col-md-10\">\r\n                    {loading ? (\r\n                        <h4 className=\"text-danger\">Loading...</h4>\r\n                    ) : (\r\n                            <h4>Coupon</h4>\r\n                        )}\r\n                    <form onSubmit={handleSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"text-muted\">Name</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                onChange={(e) => setName(e.target.value)}\r\n                                value={name}\r\n                                autoFocus\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"text-muted\">Discount %</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                onChange={(e) => setDiscount(e.target.value)}\r\n                                value={discount}\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"text-muted\">Expiry</label>\r\n                            <br />\r\n                            <DatePicker\r\n                                className=\"form-control\"\r\n                                selected={new Date()}\r\n                                value={expiry}\r\n                                onChange={(date) => setExpiry(date)}\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <button className=\"btn btn-outline-primary\">Save</button>\r\n                    </form>\r\n\r\n                    <br />\r\n                    <h4>{coupons.length}Coupons</h4>\r\n                    <table className=\"table table-bordered\">\r\n                        <thead className=\"thead-light\">\r\n                            <tr>\r\n                                <th scope=\"col\">Name</th>\r\n                                <th scope=\"col\">Expiry</th>\r\n                                <th scope=\"col\">Discount</th>\r\n                                <th scope=\"col\">Action</th>\r\n                            </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                            {coupons.map((c) => (\r\n                                <tr key={c._id}>\r\n                                    <td>{c.name}</td>\r\n                                    <td>{new Date(c.expiry).toLocaleDateString()}</td>\r\n                                    <td>{c.discount}%</td>\r\n                                    <td>\r\n                                        <DeleteOutlined\r\n                                            onClick={() => handleRemove(c._id)}\r\n                                            className=\"text-danger pointer\"\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateCouponPage","D:\\projects\\ecommerce\\client\\src\\functions\\coupon.js",[],"D:\\projects\\ecommerce\\client\\src\\components\\order\\Invoice.js",[],"D:\\projects\\ecommerce\\client\\src\\reducers\\CODReducer.js",[],"D:\\projects\\ecommerce\\client\\src\\functions\\admin.js",[],"D:\\projects\\ecommerce\\client\\src\\components\\order\\Orders.js",[],{"ruleId":"412","replacedBy":"413"},{"ruleId":"414","replacedBy":"415"},{"ruleId":"416","severity":1,"message":"417","line":13,"column":8,"nodeType":"418","endLine":13,"endColumn":14,"suggestions":"419"},{"ruleId":"420","severity":1,"message":"421","line":11,"column":5,"nodeType":"422","messageId":"423","endLine":11,"endColumn":15},{"ruleId":"420","severity":1,"message":"424","line":14,"column":13,"nodeType":"422","messageId":"423","endLine":14,"endColumn":17},{"ruleId":"416","severity":1,"message":"417","line":14,"column":8,"nodeType":"418","endLine":14,"endColumn":14,"suggestions":"425"},{"ruleId":"420","severity":1,"message":"426","line":3,"column":10,"nodeType":"422","messageId":"423","endLine":3,"endColumn":21},{"ruleId":"416","severity":1,"message":"427","line":14,"column":8,"nodeType":"418","endLine":14,"endColumn":10,"suggestions":"428"},{"ruleId":"420","severity":1,"message":"426","line":4,"column":23,"nodeType":"422","messageId":"423","endLine":4,"endColumn":34},{"ruleId":"416","severity":1,"message":"429","line":14,"column":8,"nodeType":"418","endLine":14,"endColumn":10,"suggestions":"430"},{"ruleId":"420","severity":1,"message":"426","line":4,"column":23,"nodeType":"422","messageId":"423","endLine":4,"endColumn":34},{"ruleId":"420","severity":1,"message":"431","line":6,"column":10,"nodeType":"422","messageId":"423","endLine":6,"endColumn":15},{"ruleId":"416","severity":1,"message":"432","line":17,"column":8,"nodeType":"418","endLine":17,"endColumn":10,"suggestions":"433"},{"ruleId":"420","severity":1,"message":"434","line":2,"column":17,"nodeType":"422","messageId":"423","endLine":2,"endColumn":21},{"ruleId":"420","severity":1,"message":"434","line":2,"column":17,"nodeType":"422","messageId":"423","endLine":2,"endColumn":21},{"ruleId":"416","severity":1,"message":"435","line":16,"column":8,"nodeType":"418","endLine":16,"endColumn":10,"suggestions":"436"},{"ruleId":"420","severity":1,"message":"437","line":6,"column":21,"nodeType":"422","messageId":"423","endLine":6,"endColumn":27},{"ruleId":"416","severity":1,"message":"438","line":20,"column":8,"nodeType":"418","endLine":20,"endColumn":10,"suggestions":"439"},{"ruleId":"416","severity":1,"message":"440","line":37,"column":8,"nodeType":"418","endLine":37,"endColumn":10,"suggestions":"441"},{"ruleId":"420","severity":1,"message":"442","line":12,"column":9,"nodeType":"422","messageId":"423","endLine":12,"endColumn":17},{"ruleId":"420","severity":1,"message":"443","line":14,"column":9,"nodeType":"422","messageId":"423","endLine":14,"endColumn":17},{"ruleId":"420","severity":1,"message":"444","line":16,"column":9,"nodeType":"422","messageId":"423","endLine":16,"endColumn":15},{"ruleId":"420","severity":1,"message":"445","line":19,"column":9,"nodeType":"422","messageId":"423","endLine":19,"endColumn":14},{"ruleId":"420","severity":1,"message":"446","line":20,"column":9,"nodeType":"422","messageId":"423","endLine":20,"endColumn":14},{"ruleId":"447","severity":1,"message":"448","line":83,"column":37,"nodeType":"449","messageId":"450","endLine":83,"endColumn":39},{"ruleId":"447","severity":1,"message":"448","line":95,"column":37,"nodeType":"449","messageId":"450","endLine":95,"endColumn":39},{"ruleId":"447","severity":1,"message":"448","line":111,"column":44,"nodeType":"449","messageId":"450","endLine":111,"endColumn":46},{"ruleId":"447","severity":1,"message":"448","line":131,"column":48,"nodeType":"449","messageId":"450","endLine":131,"endColumn":50},{"ruleId":"412","replacedBy":"451"},{"ruleId":"414","replacedBy":"452"},{"ruleId":"453","severity":1,"message":"454","line":13,"column":13,"nodeType":"455","endLine":17,"endColumn":15},{"ruleId":"416","severity":1,"message":"456","line":41,"column":8,"nodeType":"418","endLine":41,"endColumn":10,"suggestions":"457"},{"ruleId":"447","severity":1,"message":"448","line":50,"column":33,"nodeType":"449","messageId":"450","endLine":50,"endColumn":35},{"ruleId":"420","severity":1,"message":"442","line":20,"column":9,"nodeType":"422","messageId":"423","endLine":20,"endColumn":17},{"ruleId":"420","severity":1,"message":"443","line":22,"column":9,"nodeType":"422","messageId":"423","endLine":22,"endColumn":17},{"ruleId":"420","severity":1,"message":"444","line":24,"column":9,"nodeType":"422","messageId":"423","endLine":24,"endColumn":15},{"ruleId":"420","severity":1,"message":"445","line":27,"column":9,"nodeType":"422","messageId":"423","endLine":27,"endColumn":14},{"ruleId":"420","severity":1,"message":"446","line":28,"column":9,"nodeType":"422","messageId":"423","endLine":28,"endColumn":14},{"ruleId":"420","severity":1,"message":"458","line":23,"column":9,"nodeType":"422","messageId":"423","endLine":23,"endColumn":13},{"ruleId":"420","severity":1,"message":"444","line":26,"column":9,"nodeType":"422","messageId":"423","endLine":26,"endColumn":15},{"ruleId":"416","severity":1,"message":"459","line":17,"column":8,"nodeType":"418","endLine":17,"endColumn":14,"suggestions":"460"},{"ruleId":"416","severity":1,"message":"461","line":24,"column":8,"nodeType":"418","endLine":24,"endColumn":10,"suggestions":"462"},{"ruleId":"420","severity":1,"message":"424","line":16,"column":13,"nodeType":"422","messageId":"423","endLine":16,"endColumn":17},{"ruleId":"420","severity":1,"message":"463","line":16,"column":19,"nodeType":"422","messageId":"423","endLine":16,"endColumn":23},{"ruleId":"453","severity":1,"message":"454","line":57,"column":21,"nodeType":"455","endLine":61,"endColumn":23},{"ruleId":"464","severity":1,"message":"465","line":68,"column":25,"nodeType":"455","endLine":68,"endColumn":86},{"ruleId":"416","severity":1,"message":"466","line":15,"column":8,"nodeType":"418","endLine":15,"endColumn":14,"suggestions":"467"},{"ruleId":"416","severity":1,"message":"466","line":15,"column":8,"nodeType":"418","endLine":15,"endColumn":14,"suggestions":"468"},{"ruleId":"420","severity":1,"message":"434","line":3,"column":10,"nodeType":"422","messageId":"423","endLine":3,"endColumn":14},{"ruleId":"420","severity":1,"message":"463","line":22,"column":19,"nodeType":"422","messageId":"423","endLine":22,"endColumn":23},{"ruleId":"453","severity":1,"message":"454","line":71,"column":58,"nodeType":"455","endLine":71,"endColumn":95},{"ruleId":"453","severity":1,"message":"454","line":74,"column":42,"nodeType":"455","endLine":74,"endColumn":90},{"ruleId":"464","severity":1,"message":"465","line":95,"column":33,"nodeType":"455","endLine":95,"endColumn":62},{"ruleId":"464","severity":1,"message":"465","line":99,"column":29,"nodeType":"455","endLine":99,"endColumn":62},{"ruleId":"420","severity":1,"message":"469","line":1,"column":10,"nodeType":"422","messageId":"423","endLine":1,"endColumn":25},{"ruleId":"420","severity":1,"message":"470","line":2,"column":17,"nodeType":"422","messageId":"423","endLine":2,"endColumn":23},{"ruleId":"420","severity":1,"message":"471","line":11,"column":18,"nodeType":"422","messageId":"423","endLine":11,"endColumn":27},{"ruleId":"420","severity":1,"message":"472","line":20,"column":12,"nodeType":"422","messageId":"423","endLine":20,"endColumn":16},{"ruleId":"420","severity":1,"message":"473","line":22,"column":12,"nodeType":"422","messageId":"423","endLine":22,"endColumn":15},{"ruleId":"420","severity":1,"message":"474","line":23,"column":20,"nodeType":"422","messageId":"423","endLine":23,"endColumn":29},{"ruleId":"420","severity":1,"message":"475","line":31,"column":20,"nodeType":"422","messageId":"423","endLine":31,"endColumn":29},{"ruleId":"416","severity":1,"message":"476","line":76,"column":8,"nodeType":"418","endLine":76,"endColumn":12,"suggestions":"477"},{"ruleId":"416","severity":1,"message":"478","line":19,"column":8,"nodeType":"418","endLine":19,"endColumn":10,"suggestions":"479"},{"ruleId":"420","severity":1,"message":"434","line":3,"column":10,"nodeType":"422","messageId":"423","endLine":3,"endColumn":14},{"ruleId":"420","severity":1,"message":"480","line":5,"column":8,"nodeType":"422","messageId":"423","endLine":5,"endColumn":20},{"ruleId":"416","severity":1,"message":"478","line":21,"column":8,"nodeType":"418","endLine":21,"endColumn":10,"suggestions":"481"},{"ruleId":"420","severity":1,"message":"470","line":2,"column":18,"nodeType":"422","messageId":"423","endLine":2,"endColumn":24},{"ruleId":"453","severity":1,"message":"454","line":36,"column":33,"nodeType":"455","endLine":36,"endColumn":81},{"ruleId":"453","severity":1,"message":"454","line":43,"column":37,"nodeType":"455","endLine":43,"endColumn":76},{"ruleId":"447","severity":1,"message":"448","line":19,"column":35,"nodeType":"449","messageId":"450","endLine":19,"endColumn":37},{"ruleId":"447","severity":1,"message":"448","line":47,"column":35,"nodeType":"449","messageId":"450","endLine":47,"endColumn":37},{"ruleId":"482","severity":1,"message":"483","line":48,"column":33,"nodeType":"484","messageId":"485","endLine":48,"endColumn":35},{"ruleId":"447","severity":1,"message":"448","line":69,"column":35,"nodeType":"449","messageId":"450","endLine":69,"endColumn":37},{"ruleId":"482","severity":1,"message":"483","line":70,"column":33,"nodeType":"484","messageId":"485","endLine":70,"endColumn":35},{"ruleId":"416","severity":1,"message":"486","line":26,"column":8,"nodeType":"418","endLine":26,"endColumn":10,"suggestions":"487"},{"ruleId":"416","severity":1,"message":"488","line":34,"column":8,"nodeType":"418","endLine":34,"endColumn":10,"suggestions":"489"},{"ruleId":"453","severity":1,"message":"454","line":113,"column":25,"nodeType":"455","endLine":120,"endColumn":27},{"ruleId":"420","severity":1,"message":"426","line":2,"column":10,"nodeType":"422","messageId":"423","endLine":2,"endColumn":21},"no-native-reassign",["490"],"no-negated-in-lhs",["491"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["492"],"no-unused-vars","'CarTwoTone' is defined but never used.","Identifier","unusedVar","'user' is assigned a value but never used.",["493"],"'useDispatch' is defined but never used.","React Hook useEffect has a missing dependency: 'loadWishlist'. Either include it or remove the dependency array.",["494"],"React Hook useEffect has a missing dependency: 'loadOrders'. Either include it or remove the dependency array.",["495"],"'toast' is defined but never used.","React Hook useEffect has a missing dependency: 'loadUserOrders'. Either include it or remove the dependency array.",["496"],"'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'loadCategory'. Either include it or remove the dependency array.",["497"],"'getSub' is defined but never used.","React Hook useEffect has a missing dependency: 'loadSub'. Either include it or remove the dependency array.",["498"],"React Hook useEffect has a missing dependency: 'loadCategories'. Either include it or remove the dependency array.",["499"],"'category' is assigned a value but never used.","'shipping' is assigned a value but never used.","'images' is assigned a value but never used.","'color' is assigned a value but never used.","'brand' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["490"],["491"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'loadProduct'. Either include it or remove the dependency array.",["500"],"'subs' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadSingleProduct'. Either include it or remove the dependency array.",["501"],"React Hook useEffect has missing dependencies: 'product.ratings' and 'user'. Either include them or remove the dependency array.",["502"],"'cart' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has a missing dependency: 'loadAllProducts'. Either include it or remove the dependency array.",["503"],["504"],"'LoadingOutlined' is defined but never used.","'Button' is defined but never used.","'ItemGroup' is assigned a value but never used.","'star' is assigned a value but never used.","'sub' is assigned a value but never used.","'setBrands' is assigned a value but never used.","'setColors' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'price'. Either include it or remove the dependency array.",["505"],"React Hook useEffect has a missing dependency: 'slug'. Either include it or remove the dependency array.",["506"],"'CategoryList' is defined but never used.",["507"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'user.token'. Either include it or remove the dependency array.",["508"],"React Hook useEffect has missing dependencies: 'coupon' and 'user.token'. Either include them or remove the dependency array.",["509"],"no-global-assign","no-unsafe-negation",{"desc":"510","fix":"511"},{"desc":"510","fix":"512"},{"desc":"513","fix":"514"},{"desc":"515","fix":"516"},{"desc":"517","fix":"518"},{"desc":"519","fix":"520"},{"desc":"521","fix":"522"},{"desc":"523","fix":"524"},{"desc":"525","fix":"526"},{"desc":"527","fix":"528"},{"desc":"529","fix":"530"},{"desc":"531","fix":"532"},{"desc":"531","fix":"533"},{"desc":"534","fix":"535"},{"desc":"536","fix":"537"},{"desc":"536","fix":"538"},{"desc":"539","fix":"540"},{"desc":"541","fix":"542"},"Update the dependencies array to be: [history, user]",{"range":"543","text":"544"},{"range":"545","text":"544"},"Update the dependencies array to be: [loadWishlist]",{"range":"546","text":"547"},"Update the dependencies array to be: [loadOrders]",{"range":"548","text":"549"},"Update the dependencies array to be: [loadUserOrders]",{"range":"550","text":"551"},"Update the dependencies array to be: [loadCategory]",{"range":"552","text":"553"},"Update the dependencies array to be: [loadSub]",{"range":"554","text":"555"},"Update the dependencies array to be: [loadCategories]",{"range":"556","text":"557"},"Update the dependencies array to be: [loadProduct]",{"range":"558","text":"559"},"Update the dependencies array to be: [loadSingleProduct, slug]",{"range":"560","text":"561"},"Update the dependencies array to be: [product.ratings, user]",{"range":"562","text":"563"},"Update the dependencies array to be: [loadAllProducts, page]",{"range":"564","text":"565"},{"range":"566","text":"565"},"Update the dependencies array to be: [ok, price]",{"range":"567","text":"568"},"Update the dependencies array to be: [slug]",{"range":"569","text":"570"},{"range":"571","text":"570"},"Update the dependencies array to be: [user.token]",{"range":"572","text":"573"},"Update the dependencies array to be: [coupon, user.token]",{"range":"574","text":"575"},[403,409],"[history, user]",[460,466],[516,518],"[loadWishlist]",[514,516],"[loadOrders]",[703,705],"[loadUserOrders]",[598,600],"[loadCategory]",[760,762],"[loadSub]",[1239,1241],"[loadCategories]",[1433,1435],"[loadProduct]",[625,631],"[loadSingleProduct, slug]",[908,910],"[product.ratings, user]",[547,553],"[loadAllProducts, page]",[547,553],[2409,2413],"[ok, price]",[585,587],"[slug]",[733,735],[1115,1117],"[user.token]",[1457,1459],"[coupon, user.token]"]